"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[18867],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),k=d(n),u=r,N=k["".concat(p,".").concat(u)]||k[u]||s[u]||i;return n?a.createElement(N,l(l({ref:t},m),{},{components:n})):a.createElement(N,l({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},61739:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:9,id:"androidobjects"},l="Objects",o={unversionedId:"androidobjects",id:"version-Android SDK 7.1010.3/androidobjects",title:"Objects",description:"Transaction Result",source:"@site/android_versioned_docs/version-Android SDK 7.1010.3/androidobjects.md",sourceDirName:".",slug:"/androidobjects",permalink:"/android/androidobjects",draft:!1,tags:[],version:"Android SDK 7.1010.3",sidebarPosition:9,frontMatter:{sidebar_position:9,id:"androidobjects"},sidebar:"tutorialSidebar",previous:{title:"Events Listeners",permalink:"/android/androideventlisteners"}},p={},d=[{value:"Transaction Result",id:"25",level:2},{value:"Acquirer",id:"21",level:2},{value:"Balance",id:"balance",level:2},{value:"Balance Sign",id:"balance-sign",level:2},{value:"Card Brands",id:"cardBrands",level:2},{value:"Card Entry Type",id:"22",level:2},{value:"Card Scheme Name",id:"32",level:2},{value:"Card Tokenization Data",id:"card-tokenization-data",level:2},{value:"Connection Method",id:"20",level:2},{value:"Connection Status",id:"connection-status",level:2},{value:"Currency",id:"13",level:2},{value:"Device",id:"17",level:2},{value:"Device Capabilities",id:"24",level:2},{value:"Device Parameter",id:"device-parameter",level:2},{value:"Device Status",id:"33",level:2},{value:"Financial Status",id:"34",level:2},{value:"Handpoint Credentials",id:"43",level:2},{value:"Handpoint API (Hapi) Factory",id:"handpoint-api-hapi-factory",level:2},{value:"Hapi Manager",id:"hapi-manager",level:2},{value:"Log Level",id:"18",level:2},{value:"Manufacturer",id:"manufacturer",level:2},{value:"MerchantAuth",id:"37",level:2},{value:"Merchant Auth Credential",id:"40",level:2},{value:"Merchant Auth Options",id:"MerchantAuthOptions",level:2},{value:"Metadata",id:"metadata",level:2},{value:"Money Remittance Options",id:"money-remittance-options",level:2},{value:"MoTo Channel",id:"moto-channel",level:2},{value:"MoTo Options",id:"moto-options",level:2},{value:"Operation DTO",id:"operation-dto",level:2},{value:"Operation Start Result",id:"OperationStartResult",level:2},{value:"Optional Transaction Parameters",id:"optional-transaction-parameters",level:2},{value:"Options",id:"7",level:2},{value:"Payment Scenario",id:"35",level:2},{value:"PAX A80 Keys",id:"28",level:2},{value:"Print Error",id:"29",level:2},{value:"Refund Options",id:"6",level:2},{value:"Report Configuration",id:"19",level:2},{value:"Sale Options",id:"4",level:2},{value:"Sale and Tokenize Options",id:"sale-and-tokenize-options",level:2},{value:"Settings",id:"settings",level:2},{value:"Signature Request",id:"signature-request",level:2},{value:"Status",id:"45",level:2},{value:"Status Info",id:"status-info",level:2},{value:"Supported Locales",id:"23",level:2},{value:"Tender Type",id:"36",level:2},{value:"Tip Configuration",id:"39",level:2},{value:"Transaction Type",id:"31",level:2},{value:"Type of Result",id:"30",level:2},{value:"Verification Method",id:"38",level:2}],m={toc:d};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"objects"},"Objects"),(0,r.kt)("h2",{id:"25"},"Transaction Result"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResult")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object holding information about the result of a transaction."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"signatureUrl"),": In case the signature can not be updated to the Handpoint servers and an URL is not generated, the terminal will send back the image binary in base64 format to your software. It is important to be able to support both the URL and the image binary format."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"customerReceipt")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"merchantReceipt"),": The receipts are usually received as URLs in the transaction result from the terminal. Please note that if the terminal is not able to upload the receipt to the Handpoint cloud servers and an URL is not generated then the HTML formatted receipt will be delivered to your software. It is important to be able to manage both formats.")),(0,r.kt)("p",null," ",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"aid"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Application Identifier of the card (EMV tag 9F06).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"arc"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"EMV Authorisation Response Code (EMV tag 8A).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"authorisationCode"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Acquirer response code.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"balance")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#balance"},(0,r.kt)("em",{parentName:"a"},"Balance"))),(0,r.kt)("td",{parentName:"tr",align:null},"Balance available on the card.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"budgetNumber")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Used to split payments over a period of months.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cardEntryType"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#22"},(0,r.kt)("em",{parentName:"a"},"CardEntryType "))),(0,r.kt)("td",{parentName:"tr",align:null},"Method used by the terminal to read the card.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cardLanguagePreference"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Preferred language of the card (EMV tag 5F2D).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cardSchemeName"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#32"},(0,r.kt)("em",{parentName:"a"},"CardSchemeName"))),(0,r.kt)("td",{parentName:"tr",align:null},"The brand of the card.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cardToken"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Token representing the PAN of the card.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"chipTransactionReport")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Full report of the card EMV parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency"),"   ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#13"},(0,r.kt)("em",{parentName:"a"},"Currency"))),(0,r.kt)("td",{parentName:"tr",align:null},"The currency used for the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"customerReceipt")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A URL containing the customer receipt in HTML format. Note that if the terminal is not able to upload the receipt to the Handpoint cloud servers and generate a URL then the HTML formatted receipt will be delivered to your software. It is important to be able to manage both formats.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"customerReference"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"If a customerReference was provided as an optional parameter in the transaction request it is echoed unaltered in this field.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"deviceStatus"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#33"},(0,r.kt)("em",{parentName:"a"},"DeviceStatus"))),(0,r.kt)("td",{parentName:"tr",align:null},"Status of the device.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dueAmount"),"    ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"In case of a partial approval for the transaction, this field contains the amount which remains to be paid.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"efttimestamp"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Date")),(0,r.kt)("td",{parentName:"tr",align:null},"Time of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"efttransactionID"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Handpoint unique identifier for a transaction, this id is the one to be used for a transaction to be reversed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"errorMessage"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Detailed reason for the transaction error.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"expiryDateMMYY")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Expiry date of the card used for the operation.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"finStatus"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#34"},(0,r.kt)("em",{parentName:"a"},"FinancialStatus"))),(0,r.kt)("td",{parentName:"tr",align:null},'The financial status contains the outcome of the transaction. For example "AUTHORISED" or "DECLINED".')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"iad"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Issuer Application Data (EMV tag 9F10).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"issuerResponseCode")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Response code from the card issuer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"maskedCardNumber"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Masked card number of the card used for the operation.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"merchantAddress"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Merchant Address.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"merchantName"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Merchant Name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"merchantReceipt")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A URL containing the customer receipt in HTML format. Note that if the terminal is not able to upload the receipt to the Handpoint cloud servers and generate a URL then the HTML formatted receipt will be delivered to your software. It is important to be able to manage both formats.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metadata"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#metadata"},(0,r.kt)("em",{parentName:"a"},"Metadata"))),(0,r.kt)("td",{parentName:"tr",align:null},"If metadata was provided as an optional parameter in the transaction request it is echoed unaltered in this field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mid"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Merchant Identifier.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"originalEFTTransactionID")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"In case the transaction type is a reversal, this field will contain the identifier of the original transaction being reversed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"paymentScenario"),"   ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#35"},(0,r.kt)("em",{parentName:"a"},"PaymentScenario"))),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates the card entry mode.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"recoveredTransaction")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"This flag is set to true if the transaction result is sent through the transaction recovery logic (network or communication failure), false otherwise.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"requestedAmount")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"BigInteger")),(0,r.kt)("td",{parentName:"tr",align:null},"The requested amount is the transaction amount sent to the terminal.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rrn"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Retrieval Reference Number, unique number assigned by the acquirer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"signatureUrl")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"If a digital signature is required, this is the URL containing the image of the captured signature. In case the signature can not be updated to the Handpoint servers and an URL is not generated, the terminal will send back the image binary in base64 format to your software. It is important to be able to support both the URL and the image binary format.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"statusMessage")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},'The status of the transaction, for example "Waiting for pin".')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tenderType"),"   ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#36"},(0,r.kt)("em",{parentName:"a"},"TenderType"))),(0,r.kt)("td",{parentName:"tr",align:null},"Transaction tender type (credit / debit).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tid"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Terminal Identifier.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tipAmount")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"BigInteger")),(0,r.kt)("td",{parentName:"tr",align:null},"Tip amount, if any, in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tipPercentage")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Double")),(0,r.kt)("td",{parentName:"tr",align:null},"If tipping is enabled, this field will return the tip percentage added on top of the base amount.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"totalAmount")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"BigInteger")),(0,r.kt)("td",{parentName:"tr",align:null},"The total amount is the amount the card was charged for. It is possible that the total amount is not the same as the requested amount since an additional fee can be added, with the customer's approval, via the tipping functionality.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"transactionID")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The transaction id is a terminal internal counter incremented for each transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tsi")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Transaction Status Information (EMV tag 9B).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tvr")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Transaction Verification Results (EMV tag 95).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#31"},(0,r.kt)("em",{parentName:"a"},"TransactionType"))),(0,r.kt)("td",{parentName:"tr",align:null},'The type of transaction initiated, for example "SALE".')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"unMaskedPan"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Unmasked PAN, only received if the card is a non-payment card (loyalty).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"verificationMethod"),"   ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#38"},(0,r.kt)("em",{parentName:"a"},"VerificationMethod"))),(0,r.kt)("td",{parentName:"tr",align:null},'cardholder verification method, for example "PIN".')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"multiLanguageStatusMessages")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Map")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Map")," containing the status message in a human readable format for all the supported locales.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"multiLanguageErrorMessages"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Map")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Map")," containing the error message in a human readable format for all the supported locales.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cardHolderName"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the cardholder.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "aid": "A0000000041010",\n  "arc": "0000",\n  "authorisationCode": "123456",\n  "balance": null,\n  "budgetNumber": "",\n  "cardEntryType": "UNDEFINED",\n  "cardLanguagePreference": "",\n  "cardSchemeName": "MasterCard",\n  "cardToken": "",\n  "chipTransactionReport": "",\n  "currency": "USD",\n  "customerReceipt": "https://s3.[...]/customerReceipt.html",\n  "customerReference": "",\n  "deviceStatus": {\n      "applicationName": "ClientApp",\n      "applicationVersion": "20.1.0",\n      "batteryCharging": "Not Charging",\n      "batteryStatus": "100",\n      "batterymV": "4126",\n      "bluetoothName": "PAXA920",\n      "externalPower": "USB",\n      "serialNumber": "0821032398",\n      "statusMessage": "Approved or completed successfully"\n  },\n  "dueAmount": 0,\n  "errorMessage": "",\n  "expiryDateMMYY": "0422",\n  "finStatus": "AUTHORISED",\n  "iad": "0210A000002A0000000000000000000000FF",\n  "issuerResponseCode": "00",\n  "maskedCardNumber": "************1456",\n  "merchantAddress": "Plaza Soledad Torres Acosta 1 28013 Madrid",\n  "merchantName": "Hago la cama",\n  "merchantReceipt": "https://s3.[...]/merchantReceipt.html",\n  "metadata": {\n    "metadata1":"data 1",\n    "metadata2":"data 2",\n    "metadata3":"data 3",\n    "metadata4":"data 4",\n    "metadata5":"data 5",\n  },\n  "mid": "",\n  "originalEFTTransactionID": "",\n  "paymentScenario": "CHIPCONTACTLESS",\n  "rrn": "",\n  "signatureUrl": "",\n  "statusMessage": "Approved or completed successfully",\n  "tenderType": "CREDIT",\n  "tid": "ACQUIRER_TID",\n  "tipAmount": 0,\n  "totalAmount": 100,\n  "transactionID": "01236fc0-8192-11eb-9aca-ad4b0e95f241",\n  "tsi": "0000",\n  "tvr": "0400008001",\n  "type": "SALE",\n  "unMaskedPan": "",\n  "verificationMethod": "UNDEFINED",\n  "efttimestamp": 1615374961000,\n  "efttransactionID": "01236fc0-8192-11eb-9aca-ad4b0e95f241",\n  "requestedAmount": 100,\n  "tipPercentage": 0,\n  "recoveredTransaction": false,\n  "multiLanguageStatusMessages": [\n        { "en_US" : "Approved or completed successfully" },\n        { "fr_FR" : "Transaction approuv\xe9e" }\n  ],\n  "multiLanguageErrorMessages": [],\n  "cardHolderName": "cardholder name"\n}\n')),(0,r.kt)("h2",{id:"21"},"Acquirer"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Acquirer")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum representing all the supported acquirers for merchant authentication."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"AMEX")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BORGUN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"EVO")," ",(0,r.kt)("inlineCode",{parentName:"p"},"OMNIPAY")," ",(0,r.kt)("inlineCode",{parentName:"p"},"POSTBRIDGE")," ",(0,r.kt)("inlineCode",{parentName:"p"},"INTERAC")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TSYS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"VANTIV")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SANDBOX")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public enum Acquirer {  AMEX,\n  BORGUN,\n  EVO,\n  OMNIPAY,\n  POSTBRIDGE,\n  INTERAC,\n  TSYS,\n  VANTIV,\n  SANDBOX\n}\n")),(0,r.kt)("h2",{id:"balance"},"Balance"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Balance")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"Balance available on the card"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"The amount balance")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency"),(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Currency")),(0,r.kt)("td",{parentName:"tr",align:null},"The balance currency")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sign"),(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#balance-sign"},(0,r.kt)("em",{parentName:"a"},"BalanceSign"))),(0,r.kt)("td",{parentName:"tr",align:null},"Positive (C) or negative (D) balance. You can retrieve the balance sign using the methods isPositive() or isNegative()")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Balance balance = Balance.Companion.factory(\n    "1000", \n    Currency.EUR.getAlpha(), \n    BalanceSign.POSITIVE_SIGN.name()\n  )\n')),(0,r.kt)("h2",{id:"balance-sign"},"Balance Sign"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"BalanceSign")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum representing the balance sign."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"POSITIVE_SIGN('C')")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NEGATIVE_SIGN('D')")),(0,r.kt)("h2",{id:"cardBrands"},"Card Brands"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CardBrands")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"A string representing the supported card brands."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"VISA")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MASTERCARD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MAESTRO")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AMEX")," ",(0,r.kt)("inlineCode",{parentName:"p"},"DISCOVER")," ",(0,r.kt)("inlineCode",{parentName:"p"},"DINERS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"JCB")," ",(0,r.kt)("inlineCode",{parentName:"p"},"INTERAC")," ",(0,r.kt)("inlineCode",{parentName:"p"},"OTHER")),(0,r.kt)("h2",{id:"22"},"Card Entry Type"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CardEntryType")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum representing different card entry types."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"UNDEFINED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MSR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ICC")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CNP")),(0,r.kt)("h2",{id:"32"},"Card Scheme Name"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CardSchemeName")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"A string representing different card brands."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"MasterCard")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Visa")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Maestro")," ",(0,r.kt)("inlineCode",{parentName:"p"},"American Express")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Discover")," ",(0,r.kt)("inlineCode",{parentName:"p"},"JCB")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Diners")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UnionPay")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Interac")),(0,r.kt)("h2",{id:"card-tokenization-data"},"Card Tokenization Data"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CardTokenizationData")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object representing the tokenized card. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"token"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Token representing the card number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"expiryDate"),(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Expiration date of the card")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tenderType"),(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#36"},(0,r.kt)("em",{parentName:"a"},"TenderType"))),(0,r.kt)("td",{parentName:"tr",align:null},"ternder type of the card (credit/debit)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"issuerCountryCode")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"CountryCode")),(0,r.kt)("td",{parentName:"tr",align:null},"The country code of the issuer of the card ",(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/ISO_3166-1"},"(ISO 3166-1)"))))),(0,r.kt)("h2",{id:"20"},"Connection Method"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ConnectionMethod")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum representing different connection methods with the payment terminal."),(0,r.kt)("p",null,"Currently ",(0,r.kt)("inlineCode",{parentName:"p"},"BLUETOOTH"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ANDROID_PAYMENT")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"USB")," are the only supported types."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"BLUETOOTH")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ANDROID_PAYMENT")," ",(0,r.kt)("inlineCode",{parentName:"p"},"USB")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"//Currently BLUETOOTH, ANDROID_PAYMENT and USB are the only connection methods available.\npublic enum ConnectionMethod {\n  BLUETOOTH,\n  ANDROID_PAYMENT,\n  USB\n}\n")),(0,r.kt)("h2",{id:"connection-status"},"Connection Status"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ConnectionStatus")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"A list of connection statuses. Note: the events starting with Cloud","[...]"," are exclusively for devices linked to merchants with CLOUD Api key (CLOUD mode enabled) and can be safely ignored for Android native integrations."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Connected")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Connecting")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Disconnected")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Disconnecting")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NotConfigured")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Initializing")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CloudConnected")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CloudInitialized")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CloudAvailable")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CloudDisconnected")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CloudUnavailable")),(0,r.kt)("h2",{id:"13"},"Currency"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Currency")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum of currencies."),(0,r.kt)("p",null,"It contains the name of the currency, its ISO code, as well as information about how many decimals the currency uses."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"AED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AFN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ALL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AMD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ANG")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AOA")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ARS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AUD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AWG")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AZN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BAM")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BBD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BDT")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BGN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BHD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BIF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BMD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BND")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BOB")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BOV")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BRL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BSD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BTN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BWP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BYR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BZD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CAD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CDF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CHF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CLP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CNY")," ",(0,r.kt)("inlineCode",{parentName:"p"},"COP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"COU")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CRC")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CUC")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CUP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CVE")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CZK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"DJF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"DKK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"DOP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"DZD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"EEK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"EGP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ERN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ETB")," ",(0,r.kt)("inlineCode",{parentName:"p"},"EUR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"FJD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"FKP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"GBP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"GEL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"GHS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"GIP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"GMD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"GNF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"GTQ")," ",(0,r.kt)("inlineCode",{parentName:"p"},"GYD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"HKD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"HNL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"HRK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"HTG")," ",(0,r.kt)("inlineCode",{parentName:"p"},"HUF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"IDR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ILS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"INR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"IQD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"IRR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ISK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"JMD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"JOD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"JPY")," ",(0,r.kt)("inlineCode",{parentName:"p"},"KES")," ",(0,r.kt)("inlineCode",{parentName:"p"},"KGS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"KHR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"KMF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"KPW")," ",(0,r.kt)("inlineCode",{parentName:"p"},"KRW")," ",(0,r.kt)("inlineCode",{parentName:"p"},"KWD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"KYD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"KZT")," ",(0,r.kt)("inlineCode",{parentName:"p"},"LAK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"LBP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"LKR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"LRD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"LSL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"LTL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"LVL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"LYD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MAD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MDL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MKD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MMK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MNT")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MOP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MUR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MVR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MWK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MXN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MXV")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MYR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MZN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NAD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NGN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NIO")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NOK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NPR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NZD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"OMR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PAB")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PEN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PGK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PHP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PKR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PLN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PYG")," ",(0,r.kt)("inlineCode",{parentName:"p"},"QAR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"RON")," ",(0,r.kt)("inlineCode",{parentName:"p"},"RSD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"RUB")," ",(0,r.kt)("inlineCode",{parentName:"p"},"RWF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SAR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SBD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SCR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SDG")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SEK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SGD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SHP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SLL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SOS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SRD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"STD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SYP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SZL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"THB")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TJS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TMT")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TND")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TOP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TRY")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TTD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TWD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TZS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UAH")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UGX")," ",(0,r.kt)("inlineCode",{parentName:"p"},"USD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UZS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"VEF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"VND")," ",(0,r.kt)("inlineCode",{parentName:"p"},"VUV")," ",(0,r.kt)("inlineCode",{parentName:"p"},"WST")," ",(0,r.kt)("inlineCode",{parentName:"p"},"XAF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"XCD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"XOF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"XPF")," ",(0,r.kt)("inlineCode",{parentName:"p"},"YER")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ZAR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ZMK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ZWL")),(0,r.kt)("h2",{id:"17"},"Device"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Device")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object to store the information about the payment terminal in use."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Constructor")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Device(String name, String address, UsbDevice usbDevice, ConnectionMethod connectionMethod, String sharedSecret, int timeout);\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A name to identify the device")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},'The address of the device you wish to connect to. E.g.: "08:00:69:02:01:FC" for bluetooth or just an identifier if your application is running directly on a PAX or Telpo device (ConnectionMethod.ANDROID_PAYMENT).')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"usbDevice")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"UsbDevice")),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a concrete attached USB device.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"connectionMethod")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#20"},(0,r.kt)("em",{parentName:"a"},"ConnectionMethod "))),(0,r.kt)("td",{parentName:"tr",align:null},"Type of connection with the payment terminal. E.g: Bluetooth")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sharedSecret"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Replaces the default shared secret proviced in the initialization step.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"timeout"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of miliseconds until a connection is considered timed out. If not set, the default timeout is 15 seconds.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Id *")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A unique identifier for the payment terminal.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'//Create and init a new Datecs Device\nDevice dev = new Device("CardReader7", "08:00:69:02:01:FC", "1", ConnectionMethod.BLUETOOTH);\n\n//Create and init a new PAX/Telpo Device for a ANDROID_PAYMENT connection\nDevice dev = new Device("LocalPaxOrTelpo", "LocalHost", "null", ConnectionMethod.ANDROID_PAYMENT);\n')),(0,r.kt)("h2",{id:"24"},"Device Capabilities"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DeviceCapabilities")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object holding the capabilities of the payment terminal."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"printer"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"True if the terminal has printer, false otherwise")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cloudApi"),(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"True if the terminal is cloud-enabled, false otherwise")))),(0,r.kt)("h2",{id:"device-parameter"},"Device Parameter"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DeviceParameter")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum describing all the admin commands to send to a payment terminal."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"BluetoothName")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BluetoothPass")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SystemTimeout")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ScreenTimeout")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SignatureTimeout")),(0,r.kt)("h2",{id:"33"},"Device Status"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DeviceStatus")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"A class which holds the status of the payment terminal."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SerialNumber"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the serial number of the payment terminal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BatteryStatus")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the battery status of the payment terminal (in percentages)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BatterymV"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the battery voltage of the payment terminal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BatteryCharging"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the battery charging status of the payment terminal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ExternalPower"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the status of the payment terminal external power")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ApplicationName"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the application name of the payment terminal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ApplicationVersion")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the application version of the payment terminal")))),(0,r.kt)("h2",{id:"34"},"Financial Status"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"FinancialStatus")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum representing different statuses of a finalized transaction"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"UNDEFINED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AUTHORISED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"DECLINED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PROCESSED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"FAILED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CANCELLED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PARTIAL_APPROVAL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"IN_PROGRESS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"REFUNDED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CAPTURED")),(0,r.kt)("p",null,"Description of the different financial statuses:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UNDEFINED")," (NOT FOUND)  ",(0,r.kt)("br",null)),(0,r.kt)("td",{parentName:"tr",align:null},"Any financial status other than the below mentioned financial statuses will be ",(0,r.kt)("inlineCode",{parentName:"td"},"UNDEFINED"),". The ",(0,r.kt)("inlineCode",{parentName:"td"},"UNDEFINED")," (NOT FOUND) status can be returned as a response to the  ",(0,r.kt)("a",{parentName:"td",href:"/android/next/androiddevicemanagement#getTransactionStatus"},"get transaction status")," method. This status means that the transaction does not exist in the Handpoint gateway. If this status is returned within 90s of the start of a transaction, there could be a chance that the cardholder has not inserted, swiped or tapped his card yet on the terminal and the Handpoint gateway might soon receive the transaction. If the ",(0,r.kt)("inlineCode",{parentName:"td"},"UNDEFINED")," status is returned after 90s, it means that the transaction processed has not reached the Handpoint gateway and it will NOT be charged.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AUTHORISED")," ",(0,r.kt)("br",null)),(0,r.kt)("td",{parentName:"tr",align:null},'The transaction (Sale, Refund, etc.) has been authorised. Consider this value as "successful".')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DECLINED")," ",(0,r.kt)("br",null)),(0,r.kt)("td",{parentName:"tr",align:null},"The transaction has been declined by the acquirer or issuer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PROCESSED"),"  ",(0,r.kt)("br",null)),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"printReceipt")," operation was successful.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FAILED"),"  ",(0,r.kt)("br",null)),(0,r.kt)("td",{parentName:"tr",align:null},"Status generated due to a network error, a card which can not be read etc. As a general rule, errors are mapped to ",(0,r.kt)("inlineCode",{parentName:"td"},"FAILED"),". This means the operation was unsuccessful and the transaction has not been charged.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CANCELLED"),"  ",(0,r.kt)("br",null)),(0,r.kt)("td",{parentName:"tr",align:null},"The transaction has been cancelled. For example if the ",(0,r.kt)("inlineCode",{parentName:"td"},"stopCurrentTransaction")," operation has been used or the cancel button on the terminal has been pressed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PARTIAL_APPROVAL"),"  ",(0,r.kt)("br",null)),(0,r.kt)("td",{parentName:"tr",align:null},"A partial approval is returned by the acquirer when funds have been partially authorized, for example if the cardholder does not have all the funds to cover the entire cost of the goods or services they are buying. The merchant can obtain the remainder of the purchase amount in another form of payment (cash, check or another card transaction for the remaining). ",(0,r.kt)("inlineCode",{parentName:"td"},"PARTIAL_APPROVAL")," is ",(0,r.kt)("strong",{parentName:"td"},"only")," applicable to the United States market.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IN_PROGRESS")," * ",(0,r.kt)("br",null)),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"IN_PROGRESS")," status can be returned as a response to the ",(0,r.kt)("a",{parentName:"td",href:"/android/next/androiddevicemanagement#getTransactionStatus"},"get transaction status")," method. The transaction is known by the gateway but the result is not available yet. Please check the status again after a few seconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"REFUNDED")," * ",(0,r.kt)("br",null)),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"REFUNDED")," status can be returned as a response to the ",(0,r.kt)("a",{parentName:"td",href:"/android/next/androiddevicemanagement#getTransactionStatus"},"get transaction status")," method. The original transaction (sale) has been refunded.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CAPTURED")," ",(0,r.kt)("br",null)),(0,r.kt)("td",{parentName:"tr",align:null},"The pre-authorization has been captured and funds are being moved to the merchant account. The ",(0,r.kt)("inlineCode",{parentName:"td"},"CAPTURED")," financial status will only be returned in case a ",(0,r.kt)("a",{parentName:"td",href:"/android/next/androidtransactions#pre-auth-capture"},"preAuthorizationCapture")," message was used to complete a pre-authorization. Regular Sales do NOT need to be captured and will not return a ",(0,r.kt)("inlineCode",{parentName:"td"},"CAPTURED")," financial status.")))),(0,r.kt)("p",null,"*"," Financial statuses marked with an asterisk (*) can only be returned as a response to the ",(0,r.kt)("a",{parentName:"p",href:"/android/next/androiddevicemanagement#getTransactionStatus"},"get transaction status")," method."),(0,r.kt)("h2",{id:"43"},"Handpoint Credentials"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HandpointCredentials")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"A class containing the credentials used to communicate with the payment terminal, essentially the shared secret (always required).\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sharedSecret"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," the value of the Shared secret.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'{\n  String sharedSecret = "0102030405060708091011121314151617181920212223242526272829303132";\n  HandpointCredentials handpointCredentials = new HandpointCredentials(sharedSecret);\n  //We\'ve even set a default shared secret!\n}\n')),(0,r.kt)("h2",{id:"handpoint-api-hapi-factory"},"Handpoint API (Hapi) Factory"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HapiFactory")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"A factory to provide a unified entrypoint and simplify the instantiation of the Hapi object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Static factory"),"\ngetAsyncInterface( Events.Required requiredListener , Context context , HandpointCredentials handpointCredentials );"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"requiredListener")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/android/next/androideventlisteners#42"},(0,r.kt)("em",{parentName:"a"},"Events.Required"))),(0,r.kt)("td",{parentName:"tr",align:null},"A listener object to report the required events.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"context")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Context")),(0,r.kt)("td",{parentName:"tr",align:null},"The Android context.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"handpointCredentials")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#43"},(0,r.kt)("em",{parentName:"a"},"HandpointCredentials"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing the actor's shared secret key.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'//InitApi for Datecs devices or PAX/Telpo ConnectionMethod.ANDROID_PAYMENT\npublic void InitApi()\n{\n  String sharedSecret = "0102030405060708091011121314151617181920212223242526272829303132";\n  api = HapiFactory.getAsyncInterface(this, new HandpointCredentials(sharedSecret));\n  //The api is now initialized. Yay! we\'ve even set a default shared secret\n}\n')),(0,r.kt)("h2",{id:"hapi-manager"},"Hapi Manager"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HapiManager")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"A static class containing information about the current status of the SDK"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DefaultSharedSecret")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the default shared secret in use.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"LogLevel"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#18"},(0,r.kt)("em",{parentName:"a"},"LogLevel"))),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the current log level of the SDK and payment terminal.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"inTransaction"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Checks whether the SDK is in the middle of a transaction. True if the SDK is in a transaction, false otherwise.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SdkVersion"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the current SDK version.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"isTransactionResultPending"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"In the case of a communication failure between the payment terminal and the SDK a TransactionResult might have not been delivered. This function checks if there is a pending TransactionResult. This field is only updated when connecting to a payment terminal. If this function returns true the TransactionResult (which includes the receipt) can be fetched.getPendingTransactionResult();. This function serves the same functionality as the event pendingTransactionResult(Device device), so every time this event is invoked, HapiManager.IsTransactionResultPending() is true until the result is fetched.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Settings.AutomaticReconnection"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"When this property is set to true, the SDK will automatically try to reconnect to the payment terminal after a disconnection. The SDK internally maintains a reconnection thread which keeps on trying to connect until it succeeds. The delay between reconnections is exponentially increased on every new attempt. The default value for this property is true")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"//Check if the SDK is in transaction\nboolean inTransaction = HapiManager.inTransaction(someConnectedDevice);\n//Check the current logLevel\nLogLevel level = HapiManager.getLogLevel();\n\n//Disable automatic reconnection feature\nHapiManager.Settings.AutomaticReconnection = false;\n")),(0,r.kt)("h2",{id:"18"},"Log Level"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"LogLevel")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum describing the different levels of logging available."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"None")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Info")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Full")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Debug")),(0,r.kt)("h2",{id:"manufacturer"},"Manufacturer"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Manufacturer")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"A string representing different payment terminal supported manufacturers."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"INVALID")," ",(0,r.kt)("inlineCode",{parentName:"p"},"DATECS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PAX")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TELPO")),(0,r.kt)("h2",{id:"37"},"MerchantAuth"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"MerchantAuth")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object to store merchant authentication."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Constructor\nMerchantAuth( );\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Constructor\nMerchantAuth( Credential credential );\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"credential")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#40"},(0,r.kt)("em",{parentName:"a"},"Credential"))),(0,r.kt)("td",{parentName:"tr",align:null},"If present, adds the given credential to the list.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Constructor\nMerchantAuth( List<Credential> credentials );\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"credential"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"List<Credential",">")),(0,r.kt)("td",{parentName:"tr",align:null},"If present, the list of credentials.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Add Credential\nadd( Credential credential );\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"credential")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#40"},(0,r.kt)("em",{parentName:"a"},"Credential"))),(0,r.kt)("td",{parentName:"tr",align:null},"The credential to be added.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"MerchantAuth auth = new MerchantAuth();\nCredential credential = new Credential();\n//Optionally\ncredential.setAcquirer(YOUR_ACQUIRER);\n//Optionally\ncredential.setMid(mid);\n//Optionally\ncredential.setTid(tid);\n//Add as many credentials as acquirers your merchant supports (for example OMNIPAY/AMEX). \nauth.add(credential);\n")),(0,r.kt)("h2",{id:"40"},"Merchant Auth Credential"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Credential")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object to store credentials (Acquirer, Mid, Tid, MCC and ExternalId) for merchant authentication."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"acquirer"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#21"},(0,r.kt)("em",{parentName:"a"},"Acquirer "))),(0,r.kt)("td",{parentName:"tr",align:null},"If present, it links this credential to the specified acquirer. Required if more than one credential is provided.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mid"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"For this transaction, overrides the default MID (merchant ID) saved in the terminal configuration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tid"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"For this transaction, overrides the default TID (terminal ID) saved in the terminal configuration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mcc"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Merchant Category Code, overrides the default MCC saved in the terminal configuration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ExternalId"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"For this transaction, the External Id will be used to lookup the credential of the merchant in the Handpoint backend and process the transaction accordingly. The External id replaces the need to pass MID/TID/MCC as credentials")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Credential using Acquirer, MID, TID and  MCC\nCredential credential1 = new Credential();\n//Optionally\ncredential1.setAcquirer(YOUR_ACQUIRER);\n//Optionally\ncredential1.setMid(mid);\n//Optionally\ncredential1.setTid(tid);\n//Optionally\ncredential1.setMcc(mcc);\n\n// Credential using ExternalId\nCredential credential2 = new Credential();\ncredential2.setExternalId(externalId);\n")),(0,r.kt)("h2",{id:"MerchantAuthOptions"},"Merchant Auth Options"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"MerchantAuthOptions")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object to store merchant authentication options for regular operations."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CustomerReference")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"An arbitrary string to use as your own identifier for a transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MerchantAuth"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#37"},(0,r.kt)("em",{parentName:"a"},"MerchantAuth"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing all the credentials used to optionally authenticate a merchant")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'MerchantAuthOptions options = new MerchantAuthOptions();\n\n//If you use a customer reference\noptions.setCustomerReference("Your customer reference");\n\n//If you need Multi MID / Custom merchant Authentication\nMerchantAuth auth = new MerchantAuth();\nCredential credential = new Credential();\n//Optionally\ncredential.setAcquirer(YOUR_ACQUIRER);\n//Optionally\ncredential.setMid(mid);\n//Optionally\ncredential.setTid(tid);\n//Add as many credentials as acquirers your merchant supports (for example OMNIPAY/AMEX). \nauth.add(credential);\noptions.setMerchantAuth(auth);\n')),(0,r.kt)("h2",{id:"metadata"},"Metadata"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Metadata")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object to store metadata. This field can be used to pass custom data to the Handpoint gateway, it will be echoed back in the transaction result. This field will also be part of the transaction response if querying the Handpoint transaction reporting API. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metadata1"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"An arbitrary string containing any information/data. Max length 250 characters ",(0,r.kt)("br",null)," Valid characters: ",(0,r.kt)("inlineCode",{parentName:"td"},"a-z A-Z 0-9 - ( ) @ : % _ \\ + . ~ # ? & / = { } \" ' ,"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metadata2"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"An arbitrary string containing any information/data. Max length 250 characters ",(0,r.kt)("br",null)," Valid characters: ",(0,r.kt)("inlineCode",{parentName:"td"},"a-z A-Z 0-9 - ( ) @ : % _ \\ + . ~ # ? & / = { } \" ' ,"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metadata3"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"An arbitrary string containing any information/data. Max length 250 characters ",(0,r.kt)("br",null)," Valid characters: ",(0,r.kt)("inlineCode",{parentName:"td"},"a-z A-Z 0-9 - ( ) @ : % _ \\ + . ~ # ? & / = { } \" ' ,"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metadata4"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"An arbitrary string containing any information/data. Max length 250 characters ",(0,r.kt)("br",null)," Valid characters: ",(0,r.kt)("inlineCode",{parentName:"td"},"a-z A-Z 0-9 - ( ) @ : % _ \\ + . ~ # ? & / = { } \" ' ,"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metadata5"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"An arbitrary string containing any information/data. Max length 250 characters ",(0,r.kt)("br",null)," Valid characters: ",(0,r.kt)("inlineCode",{parentName:"td"},"a-z A-Z 0-9 - ( ) @ : % _ \\ + . ~ # ? & / = { } \" ' ,"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Option 1\nMetadata metadata = new Metadata("Data 1", "Data 2", "Data 3", "Data 4", "Data 5");\n\n// Option 2\nMetadata metadata = new Metadata();\nmetadata.setMetadata1("Data 1");\nmetadata.setMetadata2("Data 2");\nmetadata.setMetadata3("Data 3");\nmetadata.setMetadata4("Data 4");\nmetadata.setMetadata5("Data 5");\n')),(0,r.kt)("h2",{id:"money-remittance-options"},"Money Remittance Options"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"MoneyRemittanceOptions")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object representing options for Mastercard money remittance transactions. The recipient's first and last name and the recipient's country code are mandatory for Mastercard transactions processed by merchants with category codes 4829 and 6540. VISA transactions do not require money remittance options to be sent. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"fullName")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"first and last name of the recipient of the funds")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"countryCode")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"CountryCode")),(0,r.kt)("td",{parentName:"tr",align:null},"Country code of the recipient of the funds ",(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3"},"(ISO 3166-1 alpha-3)"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'MoneyRemittanceOptions moneyRemittanceOptions = new MoneyRemittanceOptions("John Doe", CountryCode.USA);\n')),(0,r.kt)("h2",{id:"moto-channel"},"MoTo Channel"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"MoToChannel")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"A enum representing the channel used for the card not present transaction (MO = Mail Order / TO = Telephone Order) ."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"MO")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TO")),(0,r.kt)("h2",{id:"moto-options"},"MoTo Options"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"MoToOptions")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object to store optional parameters for card not present (MoTo) transactions."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CustomerReference")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"An arbitrary string to use as your own identifier for a transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Channel"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#moto-channel"},(0,r.kt)("em",{parentName:"a"},"MoToChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"MO for Mail order - TO for Telephone order")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Tokenize"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag to activate tokenization of the operation, if this flag is set, a token representing the PAN of the card will be sent back by the Handpoint sytems")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MoneyRemittanceOptions"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/android/next/androidobjects#money-remittance-options"},(0,r.kt)("em",{parentName:"a"},"MoneyRemittanceOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object representing options for Mastercard money remittance transactions.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'MoToOptions options = new MoToOptions();\noptions.setCustomerReference("Trx3245");\noptions.setTokenize(true);\noptions.setTokenize(false);\noptions.setChannel(MoToChannel.MO);\noptions.setChannel(MoToChannel.TO);\n\n//Adding Money Remitance options\nMoneyRemittanceOptions moneyRemittanceOptions = new MoneyRemittanceOptions("John Doe", CountryCode.USA);\nMoToOptions moToOptions = new MoToOptions(moneyRemittanceOptions);\n')),(0,r.kt)("h2",{id:"operation-dto"},"Operation DTO"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"OperationDto")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"Object indicating which financial transaction type needs to be performed after tokenization of the card during a Tokenize Payment Operation. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sale")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/android/next/androidtransactions#2"},(0,r.kt)("em",{parentName:"a"},"Sale"))),(0,r.kt)("td",{parentName:"tr",align:null},"A sale sends a payment request to the payment terminal.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"refund")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/android/next/androidtransactions#5"},(0,r.kt)("em",{parentName:"a"},"Refund"))),(0,r.kt)("td",{parentName:"tr",align:null},"A refund operation moves funds from the merchant account to the cardholder\xb4s credit card.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"saleReversal")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/android/next/androidtransactions#4"},(0,r.kt)("em",{parentName:"a"},"Sale Reversal"))),(0,r.kt)("td",{parentName:"tr",align:null},"A sale reversal, also called sale VOID allows the user to reverse a previous sale operation.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"refundReversal")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/android/next/androidtransactions#6"},(0,r.kt)("em",{parentName:"a"},"Refund Reversal"))),(0,r.kt)("td",{parentName:"tr",align:null},"A refund reversal, also called refund VOID allows the merchant to reverse a previous refund operation.")))),(0,r.kt)("h2",{id:"OperationStartResult"},"Operation Start Result"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"OperationStartResult")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"Object containing information about the financial operation being performed."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"operationStarted")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")," if the operation has started. false otherwise")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," ",(0,r.kt)("strong",{parentName:"td"},"must")," be saved on your end in case you do not get back the transaction result object at the end of the transaction. The ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," will allow you to query the Handpoint Gateway directly to know the outcome of the transaction in case it is not delivered as planned by the terminal at the end of the transaction. A linked refund or a reversal will ",(0,r.kt)("strong",{parentName:"td"},"not")," return a ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," because the transaction reference for those types of transactions is the same as the one received for the original financial operation.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"errorMessage")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Detailed reason for the transaction error.")))),(0,r.kt)("h2",{id:"optional-transaction-parameters"},"Optional Transaction Parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"OptionalParameters")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"A class containing optional transaction parameters supported by the payment terminal."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Budget")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Budget is only available for sale transactions."),"  A ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," representing the key for a budget number.A budget number can be used to split up an amout over a period of months. The value has to be a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," of 2 digits representing the number of months to split the transaction to.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CustomerReference")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"CustomerReference is available for all transactions.")," A ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," representing the key for a customer reference.A customer reference can be used for an internal marking system. The value is sent as a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," of a maximum 25 characters and received back when the transaction has been processed.")))),(0,r.kt)("h2",{id:"7"},"Options"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"options")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object to store customer reference options for regular operations."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CustomerReference"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"An arbitrary string to use as your own identifier for a transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Metadata"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#metadata"},(0,r.kt)("em",{parentName:"a"},"Metadata"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object used to store metadata, this data will be echoed in the transaction result. ",(0,r.kt)("br",null)," Valid characters: ",(0,r.kt)("inlineCode",{parentName:"td"},"a-z A-Z 0-9 - ( ) @ : % _ \\ + . ~ # ? & / = { } \" ' ,"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Options options = new Options();\n\n//If you use a customer reference\noptions.setCustomerReference("Your customer reference");\n\n// Metadata\nMetadata metadata = new Metadata("Data 1", "Data 2", "Data 3", "Data 4", "Data 5");\noptions.setMetadata(metadata);\n')),(0,r.kt)("h2",{id:"35"},"Payment Scenario"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PaymentScenario")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum representing different types of scenario."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"UNKNOWN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MAGSTRIPE")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MAGSTRIPECONTACTLESS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CHIP")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CHIPCONTACTLESS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CHIPFAILMAGSTRIPE")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MOTO")),(0,r.kt)("h2",{id:"28"},"PAX A80 Keys"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PaxA80Keys")," ",(0,r.kt)("span",{class:"badge badge--info"},"String")),(0,r.kt)("p",null,"A string representing the PAX A80 physical keyboard keys."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"0")," ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," ",(0,r.kt)("inlineCode",{parentName:"p"},"3")," ",(0,r.kt)("inlineCode",{parentName:"p"},"4")," ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," ",(0,r.kt)("inlineCode",{parentName:"p"},"6")," ",(0,r.kt)("inlineCode",{parentName:"p"},"7")," ",(0,r.kt)("inlineCode",{parentName:"p"},"8")," ",(0,r.kt)("inlineCode",{parentName:"p"},"9")," ",(0,r.kt)("inlineCode",{parentName:"p"},"GREEN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ORANGE")," ",(0,r.kt)("inlineCode",{parentName:"p"},"RED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"FUNC")," ",(0,r.kt)("inlineCode",{parentName:"p"},"options")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"p",href:"#4"},(0,r.kt)("em",{parentName:"a"},"SaleOptions"))),(0,r.kt)("h2",{id:"29"},"Print Error"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PrintError")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum representing different errors that can come from print action."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Unexpected")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InvalidArgument")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CantConnectToPrinter")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NotSupported")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NoPermission")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PrinterDisabled")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NotWhitelisted")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Busy")," ",(0,r.kt)("inlineCode",{parentName:"p"},"OutOfPaper")," ",(0,r.kt)("inlineCode",{parentName:"p"},"DataPacketInvalid")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PrinterHasProblems")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PrinterOverheating")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PrintingUnfinished")," ",(0,r.kt)("inlineCode",{parentName:"p"},"FontNotPresent")," ",(0,r.kt)("inlineCode",{parentName:"p"},"FontFormatError")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TooLong")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BatteryTooLow")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PaperCutterError")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PaperCutterJam")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CoverOpen")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UnsupportedEncoding")),(0,r.kt)("h2",{id:"6"},"Refund Options"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RefundOptions")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object to store all the customization options for a refund."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CustomerReference"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"An arbitrary string to use as your own identifier for a transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MerchantAuth")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#37"},(0,r.kt)("em",{parentName:"a"},"MerchantAuth"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing all the credentials used to optionally authenticate a merchant")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PinBypass"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Bypasses PIN entry when the shopper says they don't know the PIN for the card and the merchant either knows they are the legitimate cardholder or want to give them the benefit of the doubt. PIN Bypass should be set to True if you want to enable pin bypass for a transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SignatureBypass"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the terminal prompts for a signature, depends on how you configure this. The major card schemes (American Express, Diners, Discover, JCB, Mastercard, Visa, UnionPay) no longer require a signature; they regard it as optional for card-present transactions. This means you can speed up your checkout by skipping the signature prompt. But if your business requires it, you can still let the terminal prompt for a signature. The shopper then provides their signature on the touch screen of the terminal or on the printed transaction receipt. This depends on how you configure this setting. It is your responsibility to verify the signature of the shopper with the signature on the card or another form of identification. Signature Bypass should be set to True if you want to enable signature for this transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CheckDuplicates")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Used to disable the duplicate payment check functionality. When a merchant is not 100% sure of the transaction outcome, they will reprocess the transaction leading to the cardholder being charged twice. In order to avoid this scenario, we are flagging the duplicate transaction and prompting a menu to the cardholder/merchant to confirm/cancel the second charge. This menu is pushed by the Handpoint SDK and will automatically be displayed on top of your own UI when required. The Handpoint SDK will only prompt the duplicate payment check menu in case the same card is used twice in a row to process a transaction for the same amount within a 5 minutes timeframe. The duplicate payment check feature is enabled by default but can be disabled by passing a false value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Metadata"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#metadata"},(0,r.kt)("em",{parentName:"a"},"Metadata"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object used to store metadata, this data will be echoed in the transaction result. ",(0,r.kt)("br",null)," Valid characters: ",(0,r.kt)("inlineCode",{parentName:"td"},"a-z A-Z 0-9 - ( ) @ : % _ \\ + . ~ # ? & / = { } \" ' ,"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MoneyRemittanceOptions"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/android/next/androidobjects#money-remittance-options"},(0,r.kt)("em",{parentName:"a"},"MoneyRemittanceOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object representing options for Mastercard money remittance transactions.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'RefundOptions options = new RefundOptions();\n\n//If you use a customer reference\noptions.setCustomerReference("Your customer reference");\n\n//If you need Multi MID / Custom merchant Authentication\nMerchantAuth auth = new MerchantAuth();\nCredential credential = new Credential();\n//Optionally\ncredential.setAcquirer(YOUR_ACQUIRER);\n//Optionally\ncredential.setMid(mid);\n//Optionally\ncredential.setTid(tid);\n//Add as many credentials as acquirers your merchant supports (for example OMNIPAY/AMEX). \nauth.add(credential);\noptions.setMerchantAuth(auth);\n\n//If you need to enable pin bypass\noptions.setPinBypass(true);\n\n//If you need to disable the duplicate payment check service\noptions.setCheckDuplicates(false);\n\n// Metadata\nMetadata metadata = new Metadata("Data 1", "Data 2", "Data 3", "Data 4", "Data 5");\noptions.setMetadata(metadata);\n\n//Adding Money Remitance options\nMoneyRemittanceOptions moneyRemittanceOptions = new MoneyRemittanceOptions("John Doe", CountryCode.USA);\nRefundOptions saleOptions = new RefundOptions(true, moneyRemittanceOptions);\n')),(0,r.kt)("h2",{id:"19"},"Report Configuration"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ReportConfiguration")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object to store all the configuration for a transactions report."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#13"},(0,r.kt)("em",{parentName:"a"},"Currency"))),(0,r.kt)("td",{parentName:"tr",align:null},"The currency to filter the transactions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"startDate")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The start date in format 'YYYYMMDDHHmmss'.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"endDate"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The end date in format 'YYYYMMDDHHmmss'.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"timeZone"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The time zone in format '+00:00'.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"terminalSerialNumber"),(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"List")),(0,r.kt)("td",{parentName:"tr",align:null},"The serial number of the terminal to fetch the transactions from (if terminalSerialNumber is empty or null, the report will show all the transactions for this merchant).")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'ReportConfiguration configuration = new ReportConfiguration("\'USD\'", "\'20210430000000\'", "\'20210430235959\'", "null");\n\nIf you want to add terminal serial numbers: List terminalSerialNumber = new ArrayList<>();\nterminalSerialNumber.add("0123456789");\nterminalSerialNumber.add("9876543210");\n ... ;\n')),(0,r.kt)("h2",{id:"4"},"Sale Options"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SaleOptions")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object to store all the customization options for a sale."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BudgetNumber"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The budget number can be used to split payments over a period of months.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CustomerReference"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"An arbitrary string to use as your own identifier for a transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MerchantAuth")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#37"},(0,r.kt)("em",{parentName:"a"},"MerchantAuth"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing all the credentials used to optionally authenticate a merchant")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PinBypass"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Bypasses PIN entry when the shopper says they don't know the PIN for the card and the merchant either knows they are the legitimate cardholder or want to give them the benefit of the doubt. PIN Bypass should be set to True if you want to enable pin bypass for a transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SignatureBypass"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the terminal prompts for a signature, depends on how you configure this. The major card schemes (American Express, Diners, Discover, JCB, Mastercard, Visa, UnionPay) no longer require a signature; they regard it as optional for card-present transactions. This means you can speed up your checkout by skipping the signature prompt. But if your business requires it, you can still let the terminal prompt for a signature. The shopper then provides their signature on the touch screen of the terminal or on the printed transaction receipt. This depends on how you configure this setting. It is your responsibility to verify the signature of the shopper with the signature on the card or another form of identification. Signature Bypass should be set to True if you want to enable signature for this transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TipConfiguration")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#39"},(0,r.kt)("em",{parentName:"a"},"TipConfiguration"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing the tip configuration for this transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CheckDuplicates")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Used to disable the duplicate payment check functionality. When a merchant is not 100% sure of the transaction outcome, they will reprocess the transaction leading to the cardholder being charged twice. In order to avoid this scenario, we are flagging the duplicate transaction and prompting a menu to the cardholder/merchant to confirm/cancel the second charge. This menu is pushed by the Handpoint SDK and will automatically be displayed on top of your own UI when required. The Handpoint SDK will only prompt the duplicate payment check menu in case the same card is used twice in a row to process a transaction for the same amount within a 5 minutes timeframe. The duplicate payment check feature is enabled by default but can be disabled by passing a false value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Metadata"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#metadata"},(0,r.kt)("em",{parentName:"a"},"Metadata"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object used to store metadata, this data will be echoed in the transaction result. ",(0,r.kt)("br",null)," Valid characters: ",(0,r.kt)("inlineCode",{parentName:"td"},"a-z A-Z 0-9 - ( ) @ : % _ \\ + . ~ # ? & / = { } \" ' ,"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MoneyRemittanceOptions"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/android/next/androidobjects#money-remittance-options"},(0,r.kt)("em",{parentName:"a"},"MoneyRemittanceOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object representing options for Mastercard money remittance transactions.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'SaleOptions options = new SaleOptions();\n\n//If you use a customer reference\noptions.setCustomerReference("Your customer reference");\n\n//If you need Multi MID / Custom merchant Authentication\nMerchantAuth auth = new MerchantAuth();\nCredential credential = new Credential();\n//Optionally\ncredential.setAcquirer(YOUR_ACQUIRER);\n//Optionally\ncredential.setMid(mid);\n//Optionally\ncredential.setTid(tid);\n//Add as many credentials as acquirers your merchant supports (for example OMNIPAY/AMEX). \nauth.add(credential);\noptions.setMerchantAuth(auth);\n\n//If you need to enable pin bypass\noptions.setPinBypass(true);\n\n//If you need to disable the duplicate payment check service\noptions.setCheckDuplicates(false);\n\n//If you want to specify the budget period\n//Only available for SureSwipe\noptions.setBudgetNumber(YOUR_BUDGET_NUMBER);\n\n//If you want to specify tip options\n//Only available for PAX and Telpo terminals.\nTipConfiguration config = new TipConfiguration();\n//Optionally\nconfig.setHeaderName(HEADER);\n//Optionally\nconfig.setFooter(FOOTER);\n//Optionally\nconfig.setEnterAmountEnabled(true);\n//Optionally\nconfig.setSkipEnabled(true);\nconfig.setTipPercentages(percentages);\noptions.setTipConfiguration(config);\n\n//Alternatively, you can set the tip amount directly\noptions.setTipConfiguration(new TipConfiguration(AMOUNT));\n\n// Metadata\nMetadata metadata = new Metadata("Data 1", "Data 2", "Data 3", "Data 4", "Data 5");\noptions.setMetadata(metadata);\n\n//Adding Money Remitance options\nMoneyRemittanceOptions moneyRemittanceOptions = new MoneyRemittanceOptions("John Doe", CountryCode.USA);\nSaleOptions saleOptions = new SaleOptions(true,moneyRemittanceOptions);\n')),(0,r.kt)("h2",{id:"sale-and-tokenize-options"},"Sale and Tokenize Options"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SaleAndTokenizeOptions")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An object to store all the customization options for a sale and tokenize options."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BudgetNumber"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The budget number can be used to split payments over a period of months.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CustomerReference"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"An arbitrary string to use as your own identifier for a transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MerchantAuth")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#37"},(0,r.kt)("em",{parentName:"a"},"MerchantAuth"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing all the credentials used to optionally authenticate a merchant")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PinBypass"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Bypasses PIN entry when the shopper says they don't know the PIN for the card and the merchant either knows they are the legitimate cardholder or want to give them the benefit of the doubt. PIN Bypass should be set to True if you want to enable pin bypass for a transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SignatureBypass"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the terminal prompts for a signature, depends on how you configure this. The major card schemes (American Express, Diners, Discover, JCB, Mastercard, Visa, UnionPay) no longer require a signature; they regard it as optional for card-present transactions. This means you can speed up your checkout by skipping the signature prompt. But if your business requires it, you can still let the terminal prompt for a signature. The shopper then provides their signature on the touch screen of the terminal or on the printed transaction receipt. This depends on how you configure this setting. It is your responsibility to verify the signature of the shopper with the signature on the card or another form of identification. Signature Bypass should be set to True if you want to enable signature for this transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TipConfiguration")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#39"},(0,r.kt)("em",{parentName:"a"},"TipConfiguration"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing the tip configuration for this transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CheckDuplicates")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Used to disable the duplicate payment check functionality. When a merchant is not 100% sure of the transaction outcome, they will reprocess the transaction leading to the cardholder being charged twice. In order to avoid this scenario, we are flagging the duplicate transaction and prompting a menu to the cardholder/merchant to confirm/cancel the second charge. This menu is pushed by the Handpoint SDK and will automatically be displayed on top of your own UI when required. The Handpoint SDK will only prompt the duplicate payment check menu in case the same card is used twice in a row to process a transaction for the same amount within a 5 minutes timeframe. The duplicate payment check feature is enabled by default but can be disabled by passing a false value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MoneyRemittanceOptions"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/android/next/androidobjects#money-remittance-options"},(0,r.kt)("em",{parentName:"a"},"MoneyRemittanceOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object representing options for Mastercard money remittance transactions.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'SaleAndTokenizeOptions options = new SaleAndTokenizeOptions();\n\n//If you use a customer reference\noptions.setCustomerReference("Your customer reference");\n\n//If you need Multi MID / Custom merchant Authentication\nMerchantAuth auth = new MerchantAuth();\nCredential credential = new Credential();\n//Optionally\ncredential.setAcquirer(YOUR_ACQUIRER);\n//Optionally\ncredential.setMid(mid);\n//Optionally\ncredential.setTid(tid);\n//Add as many credentials as acquirers your merchant supports (for example OMNIPAY/AMEX). \nauth.add(credential);\noptions.setMerchantAuth(auth);\n\n//If you need to enable pin bypass\noptions.setPinBypass(true);\n\n//If you need to disable the duplicate payment check service\noptions.setCheckDuplicates(false);\n\n//If you want to specify the budget period\n//Only available for SureSwipe\noptions.setBudgetNumber(YOUR_BUDGET_NUMBER);\n\n//If you want to specify tip options\n//Only available for PAX and Telpo terminals.\nTipConfiguration config = new TipConfiguration();\n//Optionally\nconfig.setHeaderName(HEADER);\n//Optionally\nconfig.setFooter(FOOTER);\n//Optionally\nconfig.setEnterAmountEnabled(true);\n//Optionally\nconfig.setSkipEnabled(true);\nconfig.setTipPercentages(percentages);\noptions.setTipConfiguration(config);\n\n//Alternatively, you can set the tip amount directly\noptions.setTipConfiguration(new TipConfiguration(AMOUNT));\n\n//Adding Money Remitance options\nMoneyRemittanceOptions moneyRemittanceOptions = new MoneyRemittanceOptions("John Doe", CountryCode.USA);\nSaleAndTokenizeOptions saleAndTokenizeOptions= new SaleAndTokenizeOptions(moneyRemittanceOptions);\n')),(0,r.kt)("h2",{id:"settings"},"Settings"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Settings")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"An Object holding the SDK initialization settings"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"automaticReconnection"),(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"When this property is set to true, the SDK will automatically try to reconnect to the terminal after disconnection. The SDK maintains internally a reconnection thread which keeps on trying to connect until it succeeds. The delay between reconnections is exponentially increased on every new attempt. The default value for this property is ",(0,r.kt)("strong",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"autoRecoverTransactionResult")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"The default value for this property is ",(0,r.kt)("strong",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sendToDeviceMaxAttempts"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Number of retry attemps when there is an error communicating with the card reader. The default value for this property is ",(0,r.kt)("strong",{parentName:"td"},"3"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"timeBetweenAttempts"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Time in milliseconds between attempts. The default value for this property is ",(0,r.kt)("strong",{parentName:"td"},"5000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"showSDKUIComponents")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"The default value for this property is ",(0,r.kt)("strong",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getReceiptsAsURLs"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"The default value for this property is ",(0,r.kt)("strong",{parentName:"td"},"false"))))),(0,r.kt)("h2",{id:"signature-request"},"Signature Request"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SignatureRequest")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"A class containing information about a signature verification."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"timeout"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int")," the value of the timeout in seconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MerchantReceipt")," ",(0,r.kt)("br",null)," ",(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," the merchant receipt as html. Note that if the terminal is not able to upload the receipt to the Handpoint cloud servers and generate a URL then the HTML formatted receipt will be delivered to your software. It is important to be able to manage both formats.")))),(0,r.kt)("h2",{id:"45"},"Status"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"status")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum containing information about the status of a transaction."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Undefined")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Success")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InvalidData")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ProcessingError")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CommandNotAllowed")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NotInitialised")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ConnectTimeout")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ConnectError")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SendingError")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ReceivingError")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NoDataAvailable")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionNotAllowed")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UnsupportedCurrency")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NoHostAvailable")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CardReaderError")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CardReadingFailed")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InvalidCard")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InputTimeout")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UserCancelled")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InvalidSignature")," ",(0,r.kt)("inlineCode",{parentName:"p"},"WaitingForCard")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CardInserted")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ApplicationSelection")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ApplicationConfirmation")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AmountValidation")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PinInput")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ManualCardInput")," ",(0,r.kt)("inlineCode",{parentName:"p"},"WaitingForCardRemoval")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TipInput")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SharedSecretInvalid")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SharedSecretAuth")," ",(0,r.kt)("inlineCode",{parentName:"p"},"WaitingSignature")," ",(0,r.kt)("inlineCode",{parentName:"p"},"WaitingHostConnect")," ",(0,r.kt)("inlineCode",{parentName:"p"},"WaitingHostSend")," ",(0,r.kt)("inlineCode",{parentName:"p"},"WaitingHostReceive")," ",(0,r.kt)("inlineCode",{parentName:"p"},"WaitingHostDisconnect")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PinInputCompleted")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PosCancelled")," ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestInvalid")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CardCancelled")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CardBlocked")," ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestAuthTimeout")," ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestPaymentTimeout")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ResponseAuthTimeout")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ResponsePaymentTimeout")," ",(0,r.kt)("inlineCode",{parentName:"p"},"IccCardSwiped")," ",(0,r.kt)("inlineCode",{parentName:"p"},"RemoveCard")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ScannerIsNotSupported")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ScannerEvent")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BatteryTooLow")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AccountTypeSelection")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BtIsNotSupported")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PaymentCodeSelection")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PartialApproval")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AmountDueValidation")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InvalidUrl")," ",(0,r.kt)("inlineCode",{parentName:"p"},"WaitingCustomerReceipt")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PrintingMerchantReceipt")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PrintingCustomerReceipt")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateStarted")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateFinished")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateFailed")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateProgress")," ",(0,r.kt)("inlineCode",{parentName:"p"},"WaitingHostPostSend")," ",(0,r.kt)("inlineCode",{parentName:"p"},"WaitingHostPostReceive")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Rebooting")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PrinterOutOfPaper")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ErrorConnectingToPrinter")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CardTapped")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ReceiptPrintSuccess")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InvalidPinLength")," ",(0,r.kt)("inlineCode",{parentName:"p"},"OfflinePinAttempt")," ",(0,r.kt)("inlineCode",{parentName:"p"},"OfflinePinLastAttempt")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ProcessingSignature")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CardRemoved")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TipEntered")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CardLanguagePreference")," ",(0,r.kt)("inlineCode",{parentName:"p"},"AutomaticPrintingStarted")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CancelOperationNotAllowed")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateSoftwareStarted")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateSoftwareFinished")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateSoftwareFailed")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateSoftwareProgress")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InstallSoftwareStarted")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InstallSoftwareFinished")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InstallSoftwareFailed")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InstallSoftwareProgress")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateConfigStarted")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateConfigFinished")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateConfigFailed")," ",(0,r.kt)("inlineCode",{parentName:"p"},"UpdateConfigProgress")," ",(0,r.kt)("inlineCode",{parentName:"p"},"InitialisationComplete")),(0,r.kt)("h2",{id:"status-info"},"Status Info"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"statusInfo")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,"A class containing information about the status of the transaction."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"isCancelAllowed")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"boolean")," letting the integrator know if the terminal will accept a stop transaction request.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"status"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#45"},(0,r.kt)("em",{parentName:"a"},"Status"))),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Status")," enum representing the status of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cardLanguage"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#23"},(0,r.kt)("em",{parentName:"a"},"SupportedLocales"))),(0,r.kt)("td",{parentName:"tr",align:null},"The card language preference in all supported locales.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"multiLanguageMessages"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Map")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"map")," containing the status message in a human readable format in all the supported locales.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"message"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," containing the status message of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"deviceStatus"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#33"},(0,r.kt)("em",{parentName:"a"},"DeviceStatus"))),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"DeviceStatus")," object containing information about the payment terminal.")))),(0,r.kt)("h2",{id:"23"},"Supported Locales"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SupportedLocales")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum of the SDK supported languages."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"en_CA")," ",(0,r.kt)("inlineCode",{parentName:"p"},"en_UK")," ",(0,r.kt)("inlineCode",{parentName:"p"},"en_US")," ",(0,r.kt)("inlineCode",{parentName:"p"},"es_ES")," ",(0,r.kt)("inlineCode",{parentName:"p"},"hr_HR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"is_IS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"fr_FR")," ",(0,r.kt)("inlineCode",{parentName:"p"},"pt_PT")," ",(0,r.kt)("inlineCode",{parentName:"p"},"it_IT")," ",(0,r.kt)("inlineCode",{parentName:"p"},"no_NO")," ",(0,r.kt)("inlineCode",{parentName:"p"},"de_DE")," ",(0,r.kt)("inlineCode",{parentName:"p"},"sl_SL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"et_EE")),(0,r.kt)("h2",{id:"36"},"Tender Type"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TenderType")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum representing different tender types."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NOT_SET")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CREDIT")," ",(0,r.kt)("inlineCode",{parentName:"p"},"DEBIT")),(0,r.kt)("h2",{id:"39"},"Tip Configuration"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TipConfiguration")," ",(0,r.kt)("span",{class:"badge badge--info"},"Object")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Constructor")),(0,r.kt)("p",null,"TipConfiguration( String tipAmount );"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tipAmount")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"If present, the amount of the tip to be used for the transaction.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"BigInteger")),(0,r.kt)("td",{parentName:"tr",align:null},"Transaction amount in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"baseAmount")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"BigInteger")),(0,r.kt)("td",{parentName:"tr",align:null},"Base amount used to calculate the tip - in the minor unit of currency (f.ex. 1000 is 10.00 GBP). If no base amount is defined, the transaction amount is used as base amount.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"headerName"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the tipping menu appearing on the terminal. Default: Tip")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tipPercentages")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"List<Integer",">")),(0,r.kt)("td",{parentName:"tr",align:null},"List of percentages used to calculate the tip amount. ",(0,r.kt)("strong",{parentName:"td"},"REQUIRED"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"enterAmountEnabled"),"  ",(0,r.kt)("br",null)," ",(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag used to enable the cardholder to manually enter the tip amount. Default: true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"skipEnabled")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag used to enable the cardholder to skip the tipping step. Default: true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"footer"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Footer note which will appear on the tipping menu. Default: Empty string")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "amount": "2000",\n    "baseAmount": "2000",\n    "headerName": "",\n    "tipPercentages": [5,10,15,20,25],\n    "enterAmountEnabled": true,\n    "skipEnabled": false,\n    "footer": "Thank you!!! ;)"\n}\n')),(0,r.kt)("h2",{id:"31"},"Transaction Type"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TransactionType")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum representing different types of transactions."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"UNDEFINED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SALE")," ",(0,r.kt)("inlineCode",{parentName:"p"},"VOID_SALE")," ",(0,r.kt)("inlineCode",{parentName:"p"},"REFUND")," ",(0,r.kt)("inlineCode",{parentName:"p"},"VOID_REFUND")," ",(0,r.kt)("inlineCode",{parentName:"p"},"REVERSAL")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CANCEL_SALE")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CANCEL_REFUND")," ",(0,r.kt)("inlineCode",{parentName:"p"},"TOKENIZE_CARD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SALE_AND_TOKENIZE_CARD")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CARD_PAN")),(0,r.kt)("h2",{id:"30"},"Type of Result"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TypeOfResult")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum representing different types of device reports."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"STATUS")," ",(0,r.kt)("inlineCode",{parentName:"p"},"REPORT")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BLUETOOTHNAME")," ",(0,r.kt)("inlineCode",{parentName:"p"},"EMVCONFIGURATION")),(0,r.kt)("h2",{id:"38"},"Verification Method"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"VerificationMethod")," ",(0,r.kt)("span",{class:"badge badge--info"},"Enum")),(0,r.kt)("p",null,"An enum representing different verification methods used in the transaction."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"UNDEFINED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SIGNATURE")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PIN")," ",(0,r.kt)("inlineCode",{parentName:"p"},"PIN_SIGNATURE")," ",(0,r.kt)("inlineCode",{parentName:"p"},"FAILED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"NOT_REQUIRED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"MOBILE_PASS_CODE")))}s.isMDXComponent=!0}}]);