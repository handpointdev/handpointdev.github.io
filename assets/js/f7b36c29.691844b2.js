"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[91831],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>k});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),s=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),u=s(a),k=r,c=u["".concat(p,".").concat(k)]||u[k]||m[k]||l;return a?n.createElement(c,i(i({ref:e},d),{},{components:a})):n.createElement(c,i({ref:e},d))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},18622:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const l={sidebar_position:6,id:"javascripttransactiontypes"},i="Transaction Types",o={unversionedId:"javascripttransactiontypes",id:"version-JavaScript SDK 7.2.2/javascripttransactiontypes",title:"Transaction Types",description:"Sale",source:"@site/javascript_versioned_docs/version-JavaScript SDK 7.2.2/javascripttransactiontypes.md",sourceDirName:".",slug:"/javascripttransactiontypes",permalink:"/javascript/JavaScript SDK 7.2.2/javascripttransactiontypes",draft:!1,tags:[],version:"JavaScript SDK 7.2.2",sidebarPosition:6,frontMatter:{sidebar_position:6,id:"javascripttransactiontypes"},sidebar:"tutorialSidebar",previous:{title:"Handpoint Sandbox",permalink:"/javascript/JavaScript SDK 7.2.2/javascriptsandbox"},next:{title:"Terminal Management",permalink:"/javascript/JavaScript SDK 7.2.2/javascriptterminalmanagement"}},p={},s=[{value:"Sale",id:"4",level:2},{value:"Sale And Tokenization",id:"5",level:2},{value:"Transaction Recovery",id:"6",level:2},{value:"Sale Reversal",id:"8",level:2},{value:"Refund",id:"9",level:2},{value:"Refund Reversal",id:"10",level:2},{value:"MoTo Sale",id:"moto-sale",level:2},{value:"MoTo Refund",id:"moto-refund",level:2},{value:"MoTo Reversal",id:"moto-reversal",level:2},{value:"MoTo Pre-Auth",id:"moto-pre-auth",level:2},{value:"Tip Adjustment",id:"tip-adjustment",level:2},{value:"Tokenize Card",id:"11",level:2},{value:"Card Pan",id:"12",level:2},{value:"Pre-Auth",id:"pre-auth",level:2},{value:"Pre-Auth Increase/Decrease",id:"pre-auth-increasedecrease",level:2},{value:"Pre-Auth Capture",id:"pre-auth-capture",level:2},{value:"Pre-Auth/Capture Reversal",id:"pre-authcapture-reversal",level:2}],d={toc:s};function m(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"transaction-types"},"Transaction Types"),(0,r.kt)("h2",{id:"4"},"Sale"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Sale")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"A sale initiates a transaction with the payment terminal. In its simplest form, you only have to pass the amount and currency as parameters."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of the transaction - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"saleOptions")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#23"},(0,r.kt)("em",{parentName:"a"},"SaleOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a sale (",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#39"},"Tip Configuration"),", ",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#metadata"},"Metadata"),", ",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#money-remittance-options"},"Money Remittance Options"),",...). This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function ")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var saleOptions = {\n    customerReference: "MyCustomReference",\n    tipConfiguration: {\n        baseAmount: "100",\n        skipEnabled: true,\n        enterAmountEnabled: true,\n        tipPercentages: [\n            1,\n            2,\n            3,\n            5\n        ]\n    },\n    bypassOptions: {\n        signatureBypass: true,\n        pinBypass: true\n    },\n    merchantAuth: [\n        {\n            acquirer: "ACQUIRER",\n            mid: "11111",\n            tid: "22222",\n            mcc: "33333"\n        }\n    ],\n    metadata: {\n        metadata1: "data1",\n        metadata2: "data2",\n        metadata3: "data3",\n        metadata4: "data4",\n        metadata5: "data5"\n    },\n    moneyRemittanceOptions:{\n            fullName:"John Doe",\n            countryCode:"USA"\n    }  \n}\n\nlet operationStartedResult = handpoint.sale(\'1000\', \'USD\', saleOptions, function (stat) {\n  console.log(\'Transaction status received -> \'+ stat.message) \n});\n\nlet transactionReference = operationStartedResult.transactionReference\nlet result = await operationStartedResult.transactionResult\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartedResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," and the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionResult")," (promise).")))),(0,r.kt)("h2",{id:"5"},"Sale And Tokenization"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SaleAndTokenization")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"A sale operation which also returns a card token. This functionality is not available for all acquirers, please check with Handpoint to know if tokenization is supported for your acquirer of choice."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of the transaction - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"saleOptions")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null)," ",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#23"},(0,r.kt)("em",{parentName:"a"},"SaleOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a sale and tokenize (",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#metadata"},"Metadata"),", ",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#money-remittance-options"},"Money Remittance Options"),",...). This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var saleOptions = {\n    customerReference: "MyCustomReference",\n    tipConfiguration: {\n        baseAmount: "100",\n        skipEnabled: true,\n        enterAmountEnabled: true,\n        tipPercentages: [\n            1,\n            2,\n            3,\n            5\n        ]\n    },\n    bypassOptions: {\n        signatureBypass: true,\n        pinBypass: true\n    },\n    merchantAuth: [\n        {\n            acquirer: "ACQUIRER",\n            mid: "11111",\n            tid: "22222",\n            mcc: "33333"\n        }\n    ],\n    moneyRemittanceOptions:{\n            fullName:"John Doe",\n            countryCode:"USA"\n    }  \n}\n\nlet operationStartedResult = handpoint.saleAndTokenization(\'1000\', \'USD\', saleOptions, function (stat) {\n  console.log(\'Transaction status received -> \'+ stat.message) \n});\n\nlet transactionReference = operationStartedResult.transactionReference\nlet result = await operationStartedResult.transactionResult\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartedResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," and the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionResult")," (promise).")))),(0,r.kt)("h2",{id:"6"},"Transaction Recovery"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"StartRecovery")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"The terminal has a transaction recovery loop to automatically send back the pending ",(0,r.kt)("a",{parentName:"p",href:"/javascript/next/javascriptobjects#18"},(0,r.kt)("em",{parentName:"a"},"Transaction Result"))," to the web application in case it becomes unreachable (network issue or other)."),(0,r.kt)("p",null,"For the first 100 seconds after a transaction is completed, a background thread will attempt to deliver the result every 5 seconds. If the web application is still unreachable after the first 100 seconds, the retry loop turns into an exponential increment to the power of 2 (8s-16s-32s etc\u2026)."),(0,r.kt)("p",null,"The recovery loop is reinitialized every time the Handpoint application is restarted on the payment terminal or the startRecovery method is triggered.The ",(0,r.kt)("a",{parentName:"p",href:"/javascript/next/javascriptobjects#18"},(0,r.kt)("em",{parentName:"a"},"Transaction Result"))," received through the transaction recovery loop will have the recoveredTransaction field set to true."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Important information: The web application must be successfully connected to a terminal in order to receive the pending transactions.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"//Start recovery of pending transactions \nHandpoint.startRecovery();\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Promise Successful Response")),(0,r.kt)("td",{parentName:"tr",align:null},"The event has been sent to the payment terminal.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Promise Error Response")),(0,r.kt)("td",{parentName:"tr",align:null},"The event was not sent to the payment terminal because it is unreachable.")))),(0,r.kt)("h2",{id:"8"},"Sale Reversal"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SaleReversal")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"A sale Reversal, also called sale VOID allows the merchant to reverse a previous sale operation. This operation reverts (if possible) a specific sale identified with a transaction id. In its simplest form, you only have to pass the amount, currency and originalTransactionID as parameters\t"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of the transaction - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The transaction id of the original sale authorization.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"merchantAuthOptions"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#25"},(0,r.kt)("em",{parentName:"a"},"MerchantAuthOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a saleReversal operation. This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var saleReversalOptions = {\n    customerReference: "MyCustomReference",\n    merchantAuth: [\n        {\n            acquirer: "ACQUIRER",\n            mid: "11111",\n            tid: "22222",\n            mcc: "33333"\n        }\n    ],\n}\n\nlet operationStartedResult = handpoint.saleReversal(\'1000\', \'USD\', \'OriginalSaleGUID\', saleReversalOptions, CallbackFunction(stat){...});\n\nlet transactionReference = operationStartedResult.transactionReference\nlet result = await operationStartedResult.transactionResult\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartedResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," and the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionResult")," (promise).")))),(0,r.kt)("h2",{id:"9"},"Refund"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Refund")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"A refund initiates a transaction with the payment terminal. This operation moves funds from the merchant account to the cardholder\xb4s credit card. In its simplest form, you only have to pass the amount and currency as parameters. For Interac (Canadian Debit Network), refunds can only be processed until Interac closes the batch of transactions at night."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of the transaction - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The transaction id of the original sale authorization.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"refundOptions")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#24"},(0,r.kt)("em",{parentName:"a"},"RefundOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a refund (",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#metadata"},"Metadata"),", ",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#money-remittance-options"},"Money Remittance Options"),",...). This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var refundOptions = {\n    customerReference: "MyCustomReference",\n    bypassOptions: {\n        signatureBypass: true,\n        pinBypass: true\n    },\n    merchantAuth: [\n        {\n            acquirer: "ACQUIRER",\n            mid: "11111",\n            tid: "22222",\n            mcc: "33333"\n        }\n    ],\n    moneyRemittanceOptions:{\n            fullName:"John Doe",\n            countryCode:"USA"\n    }\n}\n\nlet operationStartedResult = handpoint.refund(\'1000\', \'USD\', undefined ,refundOptions, CallbackFunction(stat){...});\n\nlet transactionReference = operationStartedResult.transactionReference\nlet result = await operationStartedResult.transactionResult\n\n// Linked Refund\nhandpoint.refund(\'1000\', \'USD\', \'OriginalSaleGUID\' ,refundOptions, CallbackFunction(stat){...});\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartedResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," and the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionResult")," (promise).")))),(0,r.kt)("h2",{id:"10"},"Refund Reversal"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RefundReversal")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"A Refund Reversal, also called Refund VOID, allows the merchant to reverse a previous refund operation. This operation reverts (if possible) a specific refund identified with a transaction id. In its simplest form, you only have to pass the amount, currency and originalTransactionID as parameters."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of the transaction - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The transaction id of the original refund authorization.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"merchantAuthOptions")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#25"},(0,r.kt)("em",{parentName:"a"},"MerchantAuthOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a refundReversal operation. This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var refundReversalOptions = {\n    customerReference: "MyCustomReference",\n    merchantAuth: [\n        {\n            acquirer: "ACQUIRER",\n            mid: "11111",\n            tid: "22222",\n            mcc: "33333"\n        }\n    ],\n}\n\nlet operationStartedResult = handpoint.refundReversal(\'1000\', \'USD\', \'OriginalRefundGUID\', refundReversalOptions, CallbackFunction(stat){...});\n\nlet transactionReference = operationStartedResult.transactionReference\nlet result = await operationStartedResult.transactionResult\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartedResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," and the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionResult")," (promise).")))),(0,r.kt)("h2",{id:"moto-sale"},"MoTo Sale"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"moToSale")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"Mail Order /Telephone Order (MOTO) sale. MOTO is a type of card-not-present (CNP) transaction in which services are paid and delivered via telephone, mail, fax, or internet communication. Triggering this function will prompt a card input form on the terminal for the merchant to enter the card number, expiry date and CVV of the card to be charged. MOTO has become synonymous with any financial transaction where the entity taking payment does not physically see the card used to make the purchase."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of the transaction - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"saleOptions"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#23"},(0,r.kt)("em",{parentName:"a"},"SaleOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a MOTO sale (Customer reference, ",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#money-remittance-options"},"Money Remittance Options"),",...). This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var saleOptions = { \n        customerReference: \"MyCustomReference\",\n        moneyRemittanceOptions:{\n            fullName:\"John Doe\",\n            countryCode:\"USA\"\n        }\n    }\n\nlet operationStartedResult = handpoint.moToSale('1000', 'USD', saleOptions, function (stat) {\n  console.log('Transaction status received -> '+ stat.message) \n});\n\nlet transactionReference = operationStartedResult.transactionReference\nlet result = await operationStartedResult.transactionResult\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartedResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," and the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionResult")," (promise).")))),(0,r.kt)("h2",{id:"moto-refund"},"MoTo Refund"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"moToRefund")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"A MOTO refund operation moves funds from the merchant account to the cardholder\xb4s credit card. In it's simplest form you only have to pass the amount and currency but it also accepts the original transaction id. Triggering this function will prompt a card input form on the terminal for the merchant to enter the card number, expiry date and CVV of the card to be charged. MOTO Refund is a type of card-not-present (CNP) transaction in which services are refunded via telephone, mail, fax, or internet communication. MOTO has become synonymous with any financial transaction where the entity taking payment does not physically see the card used to make the purchase or refund."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of the transaction - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"If this field is populated, it links the refund with a previous sale and effectively limits the maximum amount refunded to that of the original transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"refundOptions")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#24"},(0,r.kt)("em",{parentName:"a"},"RefundOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a refund (Customer reference, ",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#money-remittance-options"},"Money Remittance Options"),",...). This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var refundOptions = {\n    customerReference: \"MyCustomReference\",\n    moneyRemittanceOptions:{\n            fullName:\"John Doe\",\n            countryCode:\"USA\"\n        }\n}\n\nlet operationStartedResult = handpoint.moToRefund('1000', 'USD', undefined ,refundOptions, CallbackFunction(stat){...});\n\n// Linked Refund\nHandpoint.moToRefund('1000', 'USD', '00000000-0000-0000-0000-000000000000' ,refundOptions, CallbackFunction(stat){...});\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartedResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," and the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionResult")," (promise).")))),(0,r.kt)("h2",{id:"moto-reversal"},"MoTo Reversal"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"moToReversal")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"A MOTO reversal, also called VOID allows the user to reverse a previous MOTO sale/refund operation. This operation reverts (if possible) a specific operation identified with a transaction id. Note that transactions can only be reversed within a 24 hours timeframe or until the daily batch of transactions has been sent for submission. MOTO Reversal is a type of card-not-present (CNP) transaction used to reverse a previous MOTO Sale or MOTO Refund."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The transaction id of the original sale or refund authorization.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#26"},(0,r.kt)("em",{parentName:"a"},"Options"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a MOTO reversal operation. This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var moToReversalOptions = {\n    customerReference: \"MyCustomReference\"\n}\n\nlet operationStartedResult = handpoint.moToReversal('00000000-0000-0000-0000-000000000000', moToReversalOptions, CallbackFunction(stat){...});\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartedResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," and the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionResult")," (promise).")))),(0,r.kt)("h2",{id:"moto-pre-auth"},"MoTo Pre-Auth"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"moToPreAuthorization")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"A MOTO pre-auth initiates a pre-authorization operation to the card reader. It's used to verify that the account is valid and has sufficient funds to cover a pending transaction, without actually debiting the cardholder's account upfront."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of the transaction - in the minor unit of currency (f.ex. 1000 is 10.00 GBP).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the transaction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options"),"  ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#26"},(0,r.kt)("em",{parentName:"a"},"Options"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a MOTO sale. This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var saleOptions = { \n        customerReference: \"MyCustomReference\",\n    }\n\nlet operationStartedResult = handpoint.moToPreAuthorization('1000', 'USD', saleOptions, function (stat) {\n  console.log('Transaction status received -> '+ stat.message) \n});\n\nlet transactionReference = operationStartedResult.transactionReference\nlet result = await operationStartedResult.transactionResult\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartedResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," and the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionResult")," (promise).")))),(0,r.kt)("h2",{id:"tip-adjustment"},"Tip Adjustment"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TipAdjustment")),(0,r.kt)("p",null,"A tip adjustment operation allows merchants to adjust the tip amount of a sale or a pre-auth capture transaction before the batch of transactions is settled by the processor at the end of the day. Note: This functionality is only available for the restaurant industry in the United States and the processors currently supporting this functionality are TSYS and WORLDPAY/VANTIV."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tipAmount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"BigInteger")),(0,r.kt)("td",{parentName:"tr",align:null},"Tip amount - in the minor unit of currency (f.ex. 1000 is 10.00 GBP)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Transaction id of the original transaction")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"handpoint.tipAdjustment('100', '00000000-0000-0000-0000-000000000000') {\n});\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Status Message")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Tip adjusted")," message for OK ",(0,r.kt)("br",null)," ",(0,r.kt)("inlineCode",{parentName:"td"},"ERROR"),"  message for NOK")))),(0,r.kt)("h2",{id:"11"},"Tokenize Card"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TokenizeCard")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"Returns a card token (representing the card number). This functionality is not available for all acquirers, please check with Handpoint to know if tokenization is supported for your acquirer of choice."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#26"},(0,r.kt)("em",{parentName:"a"},"Options"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a tokenizeCard operation. This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var options = {\n    customerReference: "MyCustomReference",\n}\n\nHandpoint.tokenizeCard(options, CallbackFunction(stat){...});\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Tokenize Card Response")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#18"},(0,r.kt)("em",{parentName:"a"},"Transaction Result Object")))))),(0,r.kt)("h2",{id:"12"},"Card Pan"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CardPan")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"A cardPan request will return the full PAN of the card being swiped, dipped or tapped. Only the PANs of whitelisted card ranges will be returned by the Handpoint systems. This operation is mostly used to be able to process funds or points from loyalty cards."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#26"},(0,r.kt)("em",{parentName:"a"},"Options"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a cardPan operation. This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var options = {\n    customerReference: "MyCustomReference",\n}\n\nHandpoint.tokenizeCard(options, CallbackFunction(stat){...});\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Card Pan Response")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#18"},(0,r.kt)("em",{parentName:"a"},"Transaction Result Object")))))),(0,r.kt)("h2",{id:"pre-auth"},"Pre-Auth"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"preAuthorization")),(0,r.kt)("p",null,"A pre-auth initiates a pre-authorization operation to the card reader. In it's simplest form you only have to pass the amount and currency but it also accepts tip configuration and a map with extra parameters."),(0,r.kt)("p",null,"A pre-authorization charge, also known as a pre-auth or authorization hold, is a temporary hold placed on a customer's payment card. It's used to verify that the account is valid and has sufficient funds to cover a pending transaction, without actually debiting the cardholder's account upfront."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"BigInteger")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of funds to be pre-authorized - in the minor unit of currency (f.ex. 1000 is 10.00 GBP)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Currency")),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the pre-auth")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"preauthOptions")," ",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#23"},(0,r.kt)("em",{parentName:"a"},"SaleOptions"))),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store the customization options for a pre-auth. This object can be empty if no options are required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function ")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Perform the PreAuth operation\nlet operationStartedResult = handpoint.preAuthorization('1234', 'EUR', preauthOptions, function (stat) {\n  console.log('Transaction status received -> '+ stat.message) \n});\n\n")),(0,r.kt)("h2",{id:"pre-auth-increasedecrease"},"Pre-Auth Increase/Decrease"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"preAuthorizationIncrease")),(0,r.kt)("p",null,"This operation allows the merchant to increase/decrease the amount of a previously performed pre-auth operation. For example, if a tab was opened at a restaurant and the consumer is adding new orders going above the initial pre-authorized amount, it is required to increase the amount of the initial pre-authorization before capturing it. If the merchant wants to release part of a pre-auth, an increase with ",(0,r.kt)("strong",{parentName:"p"},"negative")," amount should be passed to the function."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"BigInteger")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of funds to be pre-authorized - in the minor unit of currency (f.ex. 1000 is 10.00 GBP)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Currency")),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the charge")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Transaction ID of the original pre-auth operation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"preauthOptions")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Options")),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store merchant authentication options for pre-auth operations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function ")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Perform the PreAuth Increase operation\nlet operationStartedResult = handpoint.preAuthorizationIncrease('1234', 'EUR','00000000-0000-0000-0000-000000000000', preauthOptions, function (stat) {\n  console.log('Transaction status received -> '+ stat.message) \n});\n\n// Perform the PreAuth Decrease operation\nlet operationStartedResult = handpoint.preAuthorizationIncrease('-1234', 'EUR','00000000-0000-0000-0000-000000000000', preauthOptions, function (stat) {\n  console.log('Transaction status received -> '+ stat.message) \n});\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Most specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," which ",(0,r.kt)("strong",{parentName:"td"},"must")," be saved on your end in case you do not get back the transaction result object at the end of the transaction. The ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," will allow you to query the Handpoint Gateway directly to know the outcome of the transaction in case it is not delivered as planned by the terminal at the end of the transaction.")))),(0,r.kt)("h2",{id:"pre-auth-capture"},"Pre-Auth Capture"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"preAuthorizationCapture")),(0,r.kt)("p",null,"A pre-authorized transaction can be captured to actually debit the cardholder's account. Depending on the merchant category code, the capture needs to happen between 7 and 31 days after the original pre-authorization. If not captured the funds will be automatically released by the issuing bank."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Please note that a pre-authorization can only be captured ONCE, multiple partial captures are not allowed"),". If for some reason, the pre-authorization was captured for an incorrect amount, you can attempt to reverse the capture (does not work with all acquirers). If the capture reversal was declined, the cardholder needs to come back into the store with his card to get refunded or re-authorize the transaction. Alternatively, the cardholder can give his card details over the phone to the merchant and a MOTO pre-auth or MOTO refund can be issued."),(0,r.kt)("p",null,"Card schemes set specific rules around which businesses are able to use pre-auth transactions. Eligibility is determined based on the Merchant Category Code (MCC), together with the card scheme."),(0,r.kt)("p",null,"Card schemes have their own set of rules on authorisation expiry. Capturing a transaction after the scheme expiry time increases the risk of a failed capture, and may also increase the interchange and/or scheme fees charged for the transaction. Card schemes can also expire an authorisation before or after the official scheme expiry period has been reached. You can often capture a payment successfully after an authorisation has expired. Depending on the card scheme, there can be a fee for late capture, and an increase in interchange fee. The risk of cardholder chargebacks increase as well."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Scheme"),(0,r.kt)("th",{parentName:"tr",align:null},"MCC"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Mastercard"),(0,r.kt)("td",{parentName:"tr",align:null},"All MCCs except 5542")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Visa"),(0,r.kt)("td",{parentName:"tr",align:null},"All MCCs except 5542")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Discover"),(0,r.kt)("td",{parentName:"tr",align:null},"3351-3441, 3501-3999, 4111, 4112, 4121, 4131, 4411, 4457, 5499, 5812, 5813, 7011, 7033, 7996, 7394, 7512, 7513, 7519, 7999")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"American Express"),(0,r.kt)("td",{parentName:"tr",align:null},"All MCCs except 5542")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"VISA rules")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MCC"),(0,r.kt)("th",{parentName:"tr",align:null},"Segment"),(0,r.kt)("th",{parentName:"tr",align:null},"Authorization timeframe"),(0,r.kt)("th",{parentName:"tr",align:null},"Amount tolerance (captured amount above pre-authorized amount)"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3501-3999, 7011"),(0,r.kt)("td",{parentName:"tr",align:null},"Lodging"),(0,r.kt)("td",{parentName:"tr",align:null},"31 days"),(0,r.kt)("td",{parentName:"tr",align:null},"15%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3351-3500, 7512"),(0,r.kt)("td",{parentName:"tr",align:null},"Car Rental"),(0,r.kt)("td",{parentName:"tr",align:null},"31 days"),(0,r.kt)("td",{parentName:"tr",align:null},"15%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4411"),(0,r.kt)("td",{parentName:"tr",align:null},"Steamship and Cruise Lines"),(0,r.kt)("td",{parentName:"tr",align:null},"31 days"),(0,r.kt)("td",{parentName:"tr",align:null},"15%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7513"),(0,r.kt)("td",{parentName:"tr",align:null},"Truck Rentals"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"15%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7033"),(0,r.kt)("td",{parentName:"tr",align:null},"Trailer Parks and Campgrounds"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"15%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7519"),(0,r.kt)("td",{parentName:"tr",align:null},"Motor Home and Recreational Vehicle Rentals"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"15%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5552"),(0,r.kt)("td",{parentName:"tr",align:null},"Electric Vehicle Charging"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"15%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7523"),(0,r.kt)("td",{parentName:"tr",align:null},"Parking and Garages"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"15%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7394"),(0,r.kt)("td",{parentName:"tr",align:null},"Equipment, Tool, Furniture and Appliance Rental"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7999"),(0,r.kt)("td",{parentName:"tr",align:null},"Recreation Services"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7996"),(0,r.kt)("td",{parentName:"tr",align:null},"Amusement Parks, Carnivals, Circuses, Fortune Tellers"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5599"),(0,r.kt)("td",{parentName:"tr",align:null},"Miscellaneous Automotive, Aircraft, and Farm Equipment Dealers"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4457"),(0,r.kt)("td",{parentName:"tr",align:null},"Boat Rentals and Leasing"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5571"),(0,r.kt)("td",{parentName:"tr",align:null},"Motorcycle Shops and Dealers"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"none")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4111"),(0,r.kt)("td",{parentName:"tr",align:null},"Local and Suburban Commuter, Passenger Transportation, including Ferries"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"25 USD (or equivalent amount in local currency)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4112"),(0,r.kt)("td",{parentName:"tr",align:null},"Passenger Railways"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"25 USD (or equivalent amount in local currency)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4131"),(0,r.kt)("td",{parentName:"tr",align:null},"Bus Lines"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"25 USD (or equivalent amount in local currency)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5812"),(0,r.kt)("td",{parentName:"tr",align:null},"Eating Places and Restaurants"),(0,r.kt)("td",{parentName:"tr",align:null},"Same day"),(0,r.kt)("td",{parentName:"tr",align:null},"20%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5813"),(0,r.kt)("td",{parentName:"tr",align:null},"Drinking Places, Bars, Taverns, Cocktail Lounges, Nightclubs, Discotheques"),(0,r.kt)("td",{parentName:"tr",align:null},"Same day"),(0,r.kt)("td",{parentName:"tr",align:null},"20%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4121"),(0,r.kt)("td",{parentName:"tr",align:null},"Taxicabs and Limousines (Card-Absent Environment only)"),(0,r.kt)("td",{parentName:"tr",align:null},"Same day"),(0,r.kt)("td",{parentName:"tr",align:null},"20%")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"MASTERCARD rules")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MCC"),(0,r.kt)("th",{parentName:"tr",align:null},"Authorization timeframe"),(0,r.kt)("th",{parentName:"tr",align:null},"Amount tolerance (captured amount above pre-authorized amount)"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"All MCCs"),(0,r.kt)("td",{parentName:"tr",align:null},"30 days"),(0,r.kt)("td",{parentName:"tr",align:null},"20%")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Maestro rules")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MCC"),(0,r.kt)("th",{parentName:"tr",align:null},"Segment"),(0,r.kt)("th",{parentName:"tr",align:null},"Authorization timeframe"),(0,r.kt)("th",{parentName:"tr",align:null},"Amount tolerance (captured amount above pre-authorized amount)"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5812"),(0,r.kt)("td",{parentName:"tr",align:null},"Eating Places and Restaurants"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"20%")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5814"),(0,r.kt)("td",{parentName:"tr",align:null},"Fast Food Restaurants"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days"),(0,r.kt)("td",{parentName:"tr",align:null},"20%")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"AMEX rules")," "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MCC"),(0,r.kt)("th",{parentName:"tr",align:null},"Authorization timeframe"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"All MCCs"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days")))),(0,r.kt)("p",null,"Note: Pre-Auth with AMEX is only available in the United States/Canada with the processor TSYS."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Discover rules"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MCC"),(0,r.kt)("th",{parentName:"tr",align:null},"Authorization timeframe"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Car Rental, Hotel/Lodging MCCs"),(0,r.kt)("td",{parentName:"tr",align:null},"30 days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"All MCCs except Car Rental and Hotel/Lodging"),(0,r.kt)("td",{parentName:"tr",align:null},"10 days")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Diners rules"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MCC"),(0,r.kt)("th",{parentName:"tr",align:null},"Debit/credit"),(0,r.kt)("th",{parentName:"tr",align:null},"Authorization timeframe"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Car Rental, Hotel/Lodging MCCs"),(0,r.kt)("td",{parentName:"tr",align:null},"All"),(0,r.kt)("td",{parentName:"tr",align:null},"30 days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"All MCCs except Car Rental and Hotel/Lodging"),(0,r.kt)("td",{parentName:"tr",align:null},"Credit"),(0,r.kt)("td",{parentName:"tr",align:null},"30 days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"All MCCs except Car Rental and Hotel/Lodging"),(0,r.kt)("td",{parentName:"tr",align:null},"Debit"),(0,r.kt)("td",{parentName:"tr",align:null},"7 days")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"JCB rules")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"MCC"),(0,r.kt)("th",{parentName:"tr",align:null},"Authorization timeframe"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Hotel and Car rental"),(0,r.kt)("td",{parentName:"tr",align:null},"Time of stay/rental")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"All MCCs except Hotel and Car rental"),(0,r.kt)("td",{parentName:"tr",align:null},"1 year")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"BigInteger")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of funds to be pre-authorized - in the minor unit of currency (f.ex. 1000 is 10.00 GBP)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"currency")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Currency")),(0,r.kt)("td",{parentName:"tr",align:null},"Currency of the pre-auth")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Transaction ID of the original pre-auth operation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"preauthOptions")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Options")),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store merchant authentication options for pre-auth operations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function ")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Perform the PreAuth Capture operation\nlet operationStartedResult = handpoint.preAuthorizationCapture('1234', 'EUR','00000000-0000-0000-0000-000000000000', preauthOptions, function (stat) {\n  console.log('Transaction status received -> '+ stat.message) \n});\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Most specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," which ",(0,r.kt)("strong",{parentName:"td"},"must")," be saved on your end in case you do not get back the transaction result object at the end of the transaction. The ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," will allow you to query the Handpoint Gateway directly to know the outcome of the transaction in case it is not delivered as planned by the terminal at the end of the transaction.")))),(0,r.kt)("h2",{id:"pre-authcapture-reversal"},"Pre-Auth/Capture Reversal"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"preAuthorizationReversal")),(0,r.kt)("p",null,"A Pre-Auth reversal allows the user to reverse a previous pre-auth operation. This operation reverts (if possible) a specific pre-auth identified with a transaction id.\nA pre-authorized reversal transaction ",(0,r.kt)("strong",{parentName:"p"},"will release the whole pre-authorized amount"),", for example when renting a car, the pre-auth reversal allows the merchant to release the funds if the car was not damaged. For partial releases, please check the ",(0,r.kt)("a",{parentName:"p",href:"/javascript/next/javascripttransactiontypes#pre-auth-increasedecrease"},"Pre-Auth Increase/Decrease")," operation."),(0,r.kt)("p",null,"A Pre-Auth reversal can be used to reverse a capture operation as well. A capture reversal transaction ",(0,r.kt)("strong",{parentName:"p"},"will release all the funds withheld"),". Reversing a capture operation can only be done before the funds are automatically settled at night, please note that not all acquirers support reversal of captured transactions. If a capture reversal is attempted after the funds have been moved, the operation will receive a decline.",(0,r.kt)("br",null),(0,r.kt)("br",null),"When the capture is reverted it returns to the previous state (",(0,r.kt)("a",{parentName:"p",href:"/javascript/next/javascriptobjects#33"},"CAPTURED")," -> ",(0,r.kt)("a",{parentName:"p",href:"/javascript/next/javascriptobjects#33"},"AUTHORISED"),")."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"originalTransactionID")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Transaction id of the original pre-auth transaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"preauthOptions")," ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"Options")),(0,r.kt)("td",{parentName:"tr",align:null},"An object to store merchant authentication options for pre-auth operations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function ")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Perform the PreAuth Reversal operation\nlet operationStartedResult = handpoint.preAuthorizationReversal('00000000-0000-0000-0000-000000000000', preauthOptions, function (stat) {\n  console.log('Transaction status received -> '+ stat.message) \n});\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"/javascript/next/javascriptobjects#operation-started-result"},"OperationStartResult"))),(0,r.kt)("td",{parentName:"tr",align:null},"Object containing information about the financial operation performed. Most specifically the ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," which ",(0,r.kt)("strong",{parentName:"td"},"must")," be saved on your end in case you do not get back the transaction result object at the end of the transaction. The ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," will allow you to query the Handpoint Gateway directly to know the outcome of the transaction in case it is not delivered as planned by the terminal at the end of the transaction.")))))}m.isMDXComponent=!0}}]);