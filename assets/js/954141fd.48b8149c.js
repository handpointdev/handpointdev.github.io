"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[681],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>k});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),s=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),c=s(a),k=r,u=c["".concat(p,".").concat(k)]||c[k]||m[k]||l;return a?n.createElement(u,i(i({ref:e},d),{},{components:a})):n.createElement(u,i({ref:e},d))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},24358:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const l={sidebar_position:7,id:"javascriptterminalmanagement"},i="Terminal Management",o={unversionedId:"javascriptterminalmanagement",id:"javascriptterminalmanagement",title:"Terminal Management",description:"Initialize",source:"@site/javascript/javascriptterminalmanagement.md",sourceDirName:".",slug:"/javascriptterminalmanagement",permalink:"/javascript/next/javascriptterminalmanagement",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,id:"javascriptterminalmanagement"},sidebar:"tutorialSidebar",previous:{title:"Transaction Types",permalink:"/javascript/next/javascripttransactiontypes"},next:{title:"Objects",permalink:"/javascript/next/javascriptobjects"}},p={},s=[{value:"Initialize",id:"1",level:2},{value:"Connect",id:"2",level:2},{value:"Disconnect",id:"3",level:2},{value:"Stop Listening Device",id:"7",level:2},{value:"Stop Current Transaction",id:"13",level:2},{value:"Print Receipt",id:"14",level:2},{value:"Ping Device",id:"15",level:2},{value:"Update",id:"16",level:2},{value:"Get Transaction Status",id:"17",level:2}],d={toc:s};function m(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"terminal-management"},"Terminal Management"),(0,r.kt)("h2",{id:"1"},"Initialize"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Initialize")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"Initializes the JavaScript SDK and returns the list of payment terminals associated with the account."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"API_key")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The API key provided by Handpoint for the merchant.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dev_or_prod_environment")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Value which defines if the JS SDK is targeting the development environment (true -> cloud.handpoint.io) or the production environment (false -> cloud.handpoint.com).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"recovery_EoT_callback")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"promise")),(0,r.kt)("td",{parentName:"tr",align:null},"Promise collecting the pending transaction results which couldn't be delivered to the web application during the execution of the transaction, for example if the network connection became unstable. The callback input parameter is a TransactionResult object. When the promise is resolved the JS SDK will send the ACK to the payment terminal to mark the result as recovered and the device will delete it from its storage. If the promise is rejected, the device will resend the TransactionResult until the promise is correctly resolved and the ACK sent to the payment terminal. The sdk has a 5 second window for the promise to be resolved")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.init('API KEY', true, (pendingEoT) => {\n console.log('Recovered Transaction -> ' + JSON.stringify(pendingEoT);\n return handleTransactionResultPromise(pendingEoT);\n})\n \n// For simple or sync operations you may return a resolved Promise. \nHandpoint.init('API KEY', true, (pendingEoT) => {\n console.log('Recovered Transaction -> ' + JSON.stringify(pendingEoT);\n return Promise.resolve();\n})\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Devices")),(0,r.kt)("td",{parentName:"tr",align:null},"List of device objects.")))),(0,r.kt)("h2",{id:"2"},"Connect"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Connect")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"Connects the Javascript SDK to a payment terminal."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"device_name")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The target payment terminal to connect to. The device_name is returned in the Device object of the initialize call.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.connect('0821330373-PAXA920');\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Connection Result")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"200")," code for OK ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"403")," code for NOK")))),(0,r.kt)("h2",{id:"3"},"Disconnect"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Disconnect")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"Disconnects the Javascript SDK from a payment terminal."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"device_name")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The target payment terminal to disconnect from. The device_name is returned in the Device object of the initialize call.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.connect('1850345672-PAXA920PRO');\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Connection Result")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Disconnected")," message for OK ",(0,r.kt)("br",null)," ",(0,r.kt)("inlineCode",{parentName:"td"},"ERROR disconnecting")," message for NOK")))),(0,r.kt)("h2",{id:"7"},"Stop Listening Device"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"StopListeningDevice")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"This operation stops the connection between your application and the payment terminal. It stops listening to transaction events and resets the connection with the card reader."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"//Stop Listening to Events \nHandpoint.stopListeningDevice();\n")),(0,r.kt)("h2",{id:"13"},"Stop Current Transaction"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"StopCurrentTransaction")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"Operation used to stop the current transaction. The transaction can only be stopped at specific stages of payment processing, for example a transaction can not be stopped when the card is being read but can be stopped when waiting for the cardholder to initially insert a card."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.stopCurrentTransaction();\n\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Promise Successful Response")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{finStatus: CANCELLED, statusMessage: 'Operation stopped'}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Promise Error Response")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{finStatus: FAILED, errorMessage: 'Unable to stop current transaction'}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Promise Error Response")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{ finStatus: FAILED, errorMessage: 'No response received from the card reader' }"))))),(0,r.kt)("h2",{id:"14"},"Print Receipt"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PrintReceipt")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"Print on demand functionality allowing the merchant to print any HTML formatted receipt. It is possible to print images or barcodes as well as passing directly a URL to the printReceipt function. A bitmap can also be printed, in order to do so it needs to be rendered as an image and inserted into the html."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The receipts are usually received as URLs in the transaction result from the terminal but note that if the terminal is not able to upload the receipt to the Handpoint cloud servers and generate a URL then the HTML formatted receipt will be delivered to your software. It is important to be able to manage both formats. ")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"receipt")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"HTML receipt or url to locate the receipt, it can be found in the response of a financial operation, in the fields merchantReceipt or customerReceipt. The receipt must match the following ",(0,r.kt)("a",{parentName:"td",href:"https://handpoint.atlassian.net/wiki/spaces/PD/pages/1409875969/Html+Print+Format"},"HTML Print Format"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.printReceipt('https://location_of_receipt_container.com/receipt_location', CallbackFunction(stat){...});\n\nvar htmlReceipt = '[...] HTML receipt [...]'\n\nHandpoint.printReceipt(htmlReceipt, CallbackFunction(stat){...});\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Print Receipt Response")),(0,r.kt)("td",{parentName:"tr",align:null},"A specific status object which describes the printing action (PrinterOutOfPaper, ErrorConnectingToPrinter or ReceiptPrintSuccess)")))),(0,r.kt)("h2",{id:"15"},"Ping Device"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PingDevice")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"This operation will ping the terminal to confirm if it is online. The promise is correctly resolved if the device is online and successfully answers to the ping"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.pingDevice(CallbackFunction(stat){...});\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Device Status")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#27"},(0,r.kt)("em",{parentName:"a"},"Device Status"))," object.")))),(0,r.kt)("h2",{id:"16"},"Update"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Update")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"Triggers a terminal software and config update."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callback_function")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"   ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Callback function to subscribe to the transaction status updates.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.update(CallbackFunction(stat){...});\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Update Response")),(0,r.kt)("td",{parentName:"tr",align:null},"A financial response object.")))),(0,r.kt)("h2",{id:"17"},"Get Transaction Status"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"getTransactionStatus")," ",(0,r.kt)("span",{class:"badge badge--info"},"Method")),(0,r.kt)("p",null,"If for any reasons you do not know if a transaction was approved or declined then this method will allow you to retrieve the status of the transaction from the Handpoint gateway. The ",(0,r.kt)("inlineCode",{parentName:"p"},"getTransactionStatus")," method is a convenient way to retrieve the current status of a transaction based on its unique reference. This method accepts a ",(0,r.kt)("inlineCode",{parentName:"p"},"transactionReference")," as a parameter and returns the current status of the transaction. The ",(0,r.kt)("inlineCode",{parentName:"p"},"transactionReference")," is returned at the start of a transaction, as part of the ",(0,r.kt)("a",{parentName:"p",href:"/javascript/next/javascriptobjects#operation-start-result"},"Operation Start Result")," object."),(0,r.kt)("p",null,"The main ",(0,r.kt)("a",{parentName:"p",href:"/javascript/next/javascriptobjects#33"},(0,r.kt)("em",{parentName:"a"},"FinancialStatus"))," that can be returned as a response to this method are the following ones:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"AUTHORISED - Transaction was successful. "),(0,r.kt)("li",{parentName:"ul"},"DECLINED - Transaction was declined. "),(0,r.kt)("li",{parentName:"ul"},"UNDEFINED (NOT FOUND) -  The transaction does not exist in the Handpoint gateway. If this status is returned within 90s of the start of a transaction, there could be a chance that the cardholder has not inserted, swiped or tapped his card yet on the terminal and the Handpoint gateway might soon receive the transaction. If the ",(0,r.kt)("inlineCode",{parentName:"li"},"UNDEFINED")," status is returned after 90s, it means that the transaction processed has not reached the Handpoint gateway and it will NOT be charged."),(0,r.kt)("li",{parentName:"ul"},"IN_PROGRESS - The transaction has been received by the gateway but the outcome is not known yet, try again after a few seconds."),(0,r.kt)("li",{parentName:"ul"},"REFUNDED - Transaction was refunded.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," ",(0,r.kt)("span",{class:"badge badge--primary"},"Required"),"  ",(0,r.kt)("br",null),(0,r.kt)("em",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"transactionReference")," (",(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)"},"UUID v4"),") is returned at the start of a transaction, as part of the ",(0,r.kt)("a",{parentName:"td",href:"/javascript/next/javascriptobjects#operation-start-result"},"Operation Start Result")," object.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Handpoint.getTransactionStatus(transactionReference).then(\n    transactionResult => {\n        console.log('Transaction Result -> ' + JSON.stringify(transactionResult))\n    }\n).catch(\n    errorStatus => console.log('ERROR in getTransactionStatus -> ' + JSON.stringify(errorStatus))\n);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Transaction Status")),(0,r.kt)("td",{parentName:"tr",align:null},"The status of the requested transaction.")))))}m.isMDXComponent=!0}}]);